#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ubank
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="umbldms")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void InsertCompanySetting(CompanySetting instance);
    partial void UpdateCompanySetting(CompanySetting instance);
    partial void DeleteCompanySetting(CompanySetting instance);
    partial void Insertdepartment(department instance);
    partial void Updatedepartment(department instance);
    partial void Deletedepartment(department instance);
    partial void InsertRefActivity(RefActivity instance);
    partial void UpdateRefActivity(RefActivity instance);
    partial void DeleteRefActivity(RefActivity instance);
    partial void InsertRefActivityDetail(RefActivityDetail instance);
    partial void UpdateRefActivityDetail(RefActivityDetail instance);
    partial void DeleteRefActivityDetail(RefActivityDetail instance);
    partial void InsertRefComplaint(RefComplaint instance);
    partial void UpdateRefComplaint(RefComplaint instance);
    partial void DeleteRefComplaint(RefComplaint instance);
    partial void InsertRefDivision(RefDivision instance);
    partial void UpdateRefDivision(RefDivision instance);
    partial void DeleteRefDivision(RefDivision instance);
    partial void InsertRefLocation(RefLocation instance);
    partial void UpdateRefLocation(RefLocation instance);
    partial void DeleteRefLocation(RefLocation instance);
    partial void InsertRefProjectCateg(RefProjectCateg instance);
    partial void UpdateRefProjectCateg(RefProjectCateg instance);
    partial void DeleteRefProjectCateg(RefProjectCateg instance);
    partial void InsertRefProject(RefProject instance);
    partial void UpdateRefProject(RefProject instance);
    partial void DeleteRefProject(RefProject instance);
    partial void InsertRefReported_Problem(RefReported_Problem instance);
    partial void UpdateRefReported_Problem(RefReported_Problem instance);
    partial void DeleteRefReported_Problem(RefReported_Problem instance);
    partial void InsertRefSystemRole(RefSystemRole instance);
    partial void UpdateRefSystemRole(RefSystemRole instance);
    partial void DeleteRefSystemRole(RefSystemRole instance);
    partial void InsertRefSystemRoleSupervisor(RefSystemRoleSupervisor instance);
    partial void UpdateRefSystemRoleSupervisor(RefSystemRoleSupervisor instance);
    partial void DeleteRefSystemRoleSupervisor(RefSystemRoleSupervisor instance);
    partial void InsertRefUserLevel(RefUserLevel instance);
    partial void UpdateRefUserLevel(RefUserLevel instance);
    partial void DeleteRefUserLevel(RefUserLevel instance);
    partial void InsertRefUserRequestType(RefUserRequestType instance);
    partial void UpdateRefUserRequestType(RefUserRequestType instance);
    partial void DeleteRefUserRequestType(RefUserRequestType instance);
    partial void InsertReported_channel(Reported_channel instance);
    partial void UpdateReported_channel(Reported_channel instance);
    partial void DeleteReported_channel(Reported_channel instance);
    partial void InsertsirGroup(sirGroup instance);
    partial void UpdatesirGroup(sirGroup instance);
    partial void DeletesirGroup(sirGroup instance);
    partial void InsertUserManager(UserManager instance);
    partial void UpdateUserManager(UserManager instance);
    partial void DeleteUserManager(UserManager instance);
    partial void InsertUserManagerGroup(UserManagerGroup instance);
    partial void UpdateUserManagerGroup(UserManagerGroup instance);
    partial void DeleteUserManagerGroup(UserManagerGroup instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["strConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AppFlow> AppFlows
		{
			get
			{
				return this.GetTable<AppFlow>();
			}
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<AppProcessCmpt> AppProcessCmpts
		{
			get
			{
				return this.GetTable<AppProcessCmpt>();
			}
		}
		
		public System.Data.Linq.Table<CompanySetting> CompanySettings
		{
			get
			{
				return this.GetTable<CompanySetting>();
			}
		}
		
		public System.Data.Linq.Table<department> departments
		{
			get
			{
				return this.GetTable<department>();
			}
		}
		
		public System.Data.Linq.Table<emailStatus> emailStatus
		{
			get
			{
				return this.GetTable<emailStatus>();
			}
		}
		
		public System.Data.Linq.Table<FormName> FormNames
		{
			get
			{
				return this.GetTable<FormName>();
			}
		}
		
		public System.Data.Linq.Table<FormRight> FormRights
		{
			get
			{
				return this.GetTable<FormRight>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<OraServerInfo> OraServerInfos
		{
			get
			{
				return this.GetTable<OraServerInfo>();
			}
		}
		
		public System.Data.Linq.Table<RefActivity> RefActivities
		{
			get
			{
				return this.GetTable<RefActivity>();
			}
		}
		
		public System.Data.Linq.Table<RefActivityDetail> RefActivityDetails
		{
			get
			{
				return this.GetTable<RefActivityDetail>();
			}
		}
		
		public System.Data.Linq.Table<RefComplaint> RefComplaints
		{
			get
			{
				return this.GetTable<RefComplaint>();
			}
		}
		
		public System.Data.Linq.Table<RefDivision> RefDivisions
		{
			get
			{
				return this.GetTable<RefDivision>();
			}
		}
		
		public System.Data.Linq.Table<RefLocation> RefLocations
		{
			get
			{
				return this.GetTable<RefLocation>();
			}
		}
		
		public System.Data.Linq.Table<RefPibasCon> RefPibasCons
		{
			get
			{
				return this.GetTable<RefPibasCon>();
			}
		}
		
		public System.Data.Linq.Table<RefPIBASConn> RefPIBASConns
		{
			get
			{
				return this.GetTable<RefPIBASConn>();
			}
		}
		
		public System.Data.Linq.Table<RefProjectCateg> RefProjectCategs
		{
			get
			{
				return this.GetTable<RefProjectCateg>();
			}
		}
		
		public System.Data.Linq.Table<RefProject> RefProjects
		{
			get
			{
				return this.GetTable<RefProject>();
			}
		}
		
		public System.Data.Linq.Table<RefReported_Problem> RefReported_Problems
		{
			get
			{
				return this.GetTable<RefReported_Problem>();
			}
		}
		
		public System.Data.Linq.Table<RefRight> RefRights
		{
			get
			{
				return this.GetTable<RefRight>();
			}
		}
		
		public System.Data.Linq.Table<RefSystemRole> RefSystemRoles
		{
			get
			{
				return this.GetTable<RefSystemRole>();
			}
		}
		
		public System.Data.Linq.Table<RefSystemRoleSupervisor> RefSystemRoleSupervisors
		{
			get
			{
				return this.GetTable<RefSystemRoleSupervisor>();
			}
		}
		
		public System.Data.Linq.Table<RefUserLevel> RefUserLevels
		{
			get
			{
				return this.GetTable<RefUserLevel>();
			}
		}
		
		public System.Data.Linq.Table<RefUserRequestType> RefUserRequestTypes
		{
			get
			{
				return this.GetTable<RefUserRequestType>();
			}
		}
		
		public System.Data.Linq.Table<Reported_channel> Reported_channels
		{
			get
			{
				return this.GetTable<Reported_channel>();
			}
		}
		
		public System.Data.Linq.Table<RequestDetail> RequestDetails
		{
			get
			{
				return this.GetTable<RequestDetail>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<sirGroup> sirGroups
		{
			get
			{
				return this.GetTable<sirGroup>();
			}
		}
		
		public System.Data.Linq.Table<UserCategory> UserCategories
		{
			get
			{
				return this.GetTable<UserCategory>();
			}
		}
		
		public System.Data.Linq.Table<UserManager> UserManagers
		{
			get
			{
				return this.GetTable<UserManager>();
			}
		}
		
		public System.Data.Linq.Table<UserManagerGroup> UserManagerGroups
		{
			get
			{
				return this.GetTable<UserManagerGroup>();
			}
		}
		
		public System.Data.Linq.Table<UserRightsAtFormDelete> UserRightsAtFormDeletes
		{
			get
			{
				return this.GetTable<UserRightsAtFormDelete>();
			}
		}
		
		public System.Data.Linq.Table<vw_aspnet_User> vw_aspnet_Users
		{
			get
			{
				return this.GetTable<vw_aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<vw_aspnet_UsersInRole> vw_aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<vw_aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<WebAccessStatus> WebAccessStatus
		{
			get
			{
				return this.GetTable<WebAccessStatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppFlow")]
	public partial class AppFlow
	{
		
		private decimal _AppID;
		
		private decimal _DivisionID;
		
		private decimal _ProjectID;
		
		private string _UserID;
		
		private decimal _LevelID;
		
		private bool _IsSupervised;
		
		private System.Nullable<System.DateTime> _SupervisionDate;
		
		public AppFlow()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Decimal(18,0) NOT NULL")]
		public decimal AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this._AppID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Decimal(18,0) NOT NULL")]
		public decimal DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					this._DivisionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Decimal(18,0) NOT NULL")]
		public decimal LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this._LevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupervised", DbType="Bit NOT NULL")]
		public bool IsSupervised
		{
			get
			{
				return this._IsSupervised;
			}
			set
			{
				if ((this._IsSupervised != value))
				{
					this._IsSupervised = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SupervisionDate
		{
			get
			{
				return this._SupervisionDate;
			}
			set
			{
				if ((this._SupervisionDate != value))
				{
					this._SupervisionDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _AppID;
		
		private decimal _UserRequestTypeID;
		
		private int _LocationID;
		
		private decimal _DivisionID;
		
		private decimal _ProjectID;
		
		private decimal _SystemRoleID;
		
		private string _UserName;
		
		private System.Nullable<decimal> _EmpID;
		
		private string _Email;
		
		private System.Nullable<decimal> _UserLimitsDr;
		
		private System.Nullable<decimal> _UserLimitCr;
		
		private System.Nullable<decimal> _UserSupLimitDr;
		
		private System.Nullable<decimal> _UserSupLimitCr;
		
		private System.Nullable<decimal> _ODLimit;
		
		private System.Nullable<decimal> _IBATranLimitDr;
		
		private System.Nullable<decimal> _IBATranLimitCr;
		
		private System.Nullable<decimal> _IBATranSupLimitDr;
		
		private System.Nullable<decimal> _IBATranSupLimitCr;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _AppLevel;
		
		private System.Nullable<System.DateTime> _AppDate;
		
		private System.Nullable<System.DateTime> _TranDate;
		
		private System.Nullable<bool> _IsClosed;
		
		private string _RemarksFromITOps;
		
		private System.Nullable<bool> _IsDecline;
		
		private string _DeclineBy;
		
		private string _UserExistingID;
		
		private System.Nullable<bool> _IsSupComplete;
		
		private string _OppsITUser;
		
		private string _DeclineReason;
		
		private EntityRef<RefDivision> _RefDivision;
		
		private EntityRef<RefSystemRole> _RefSystemRole;
		
		private EntityRef<RefUserLevel> _RefUserLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(decimal value);
    partial void OnAppIDChanged();
    partial void OnUserRequestTypeIDChanging(decimal value);
    partial void OnUserRequestTypeIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnDivisionIDChanging(decimal value);
    partial void OnDivisionIDChanged();
    partial void OnProjectIDChanging(decimal value);
    partial void OnProjectIDChanged();
    partial void OnSystemRoleIDChanging(decimal value);
    partial void OnSystemRoleIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmpIDChanging(System.Nullable<decimal> value);
    partial void OnEmpIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserLimitsDrChanging(System.Nullable<decimal> value);
    partial void OnUserLimitsDrChanged();
    partial void OnUserLimitCrChanging(System.Nullable<decimal> value);
    partial void OnUserLimitCrChanged();
    partial void OnUserSupLimitDrChanging(System.Nullable<decimal> value);
    partial void OnUserSupLimitDrChanged();
    partial void OnUserSupLimitCrChanging(System.Nullable<decimal> value);
    partial void OnUserSupLimitCrChanged();
    partial void OnODLimitChanging(System.Nullable<decimal> value);
    partial void OnODLimitChanged();
    partial void OnIBATranLimitDrChanging(System.Nullable<decimal> value);
    partial void OnIBATranLimitDrChanged();
    partial void OnIBATranLimitCrChanging(System.Nullable<decimal> value);
    partial void OnIBATranLimitCrChanged();
    partial void OnIBATranSupLimitDrChanging(System.Nullable<decimal> value);
    partial void OnIBATranSupLimitDrChanged();
    partial void OnIBATranSupLimitCrChanging(System.Nullable<decimal> value);
    partial void OnIBATranSupLimitCrChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAppLevelChanging(System.Nullable<decimal> value);
    partial void OnAppLevelChanged();
    partial void OnAppDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppDateChanged();
    partial void OnTranDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTranDateChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnRemarksFromITOpsChanging(string value);
    partial void OnRemarksFromITOpsChanged();
    partial void OnIsDeclineChanging(System.Nullable<bool> value);
    partial void OnIsDeclineChanged();
    partial void OnDeclineByChanging(string value);
    partial void OnDeclineByChanged();
    partial void OnUserExistingIDChanging(string value);
    partial void OnUserExistingIDChanged();
    partial void OnIsSupCompleteChanging(System.Nullable<bool> value);
    partial void OnIsSupCompleteChanged();
    partial void OnOppsITUserChanging(string value);
    partial void OnOppsITUserChanged();
    partial void OnDeclineReasonChanging(string value);
    partial void OnDeclineReasonChanged();
    #endregion
		
		public Application()
		{
			this._RefDivision = default(EntityRef<RefDivision>);
			this._RefSystemRole = default(EntityRef<RefSystemRole>);
			this._RefUserLevel = default(EntityRef<RefUserLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRequestTypeID", DbType="Decimal(18,0) NOT NULL")]
		public decimal UserRequestTypeID
		{
			get
			{
				return this._UserRequestTypeID;
			}
			set
			{
				if ((this._UserRequestTypeID != value))
				{
					this.OnUserRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserRequestTypeID = value;
					this.SendPropertyChanged("UserRequestTypeID");
					this.OnUserRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Decimal(18,0) NOT NULL")]
		public decimal DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._RefDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemRoleID", DbType="Decimal(18,0) NOT NULL")]
		public decimal SystemRoleID
		{
			get
			{
				return this._SystemRoleID;
			}
			set
			{
				if ((this._SystemRoleID != value))
				{
					if (this._RefSystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemRoleIDChanging(value);
					this.SendPropertyChanging();
					this._SystemRoleID = value;
					this.SendPropertyChanged("SystemRoleID");
					this.OnSystemRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLimitsDr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserLimitsDr
		{
			get
			{
				return this._UserLimitsDr;
			}
			set
			{
				if ((this._UserLimitsDr != value))
				{
					this.OnUserLimitsDrChanging(value);
					this.SendPropertyChanging();
					this._UserLimitsDr = value;
					this.SendPropertyChanged("UserLimitsDr");
					this.OnUserLimitsDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLimitCr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserLimitCr
		{
			get
			{
				return this._UserLimitCr;
			}
			set
			{
				if ((this._UserLimitCr != value))
				{
					this.OnUserLimitCrChanging(value);
					this.SendPropertyChanging();
					this._UserLimitCr = value;
					this.SendPropertyChanged("UserLimitCr");
					this.OnUserLimitCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSupLimitDr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserSupLimitDr
		{
			get
			{
				return this._UserSupLimitDr;
			}
			set
			{
				if ((this._UserSupLimitDr != value))
				{
					this.OnUserSupLimitDrChanging(value);
					this.SendPropertyChanging();
					this._UserSupLimitDr = value;
					this.SendPropertyChanged("UserSupLimitDr");
					this.OnUserSupLimitDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSupLimitCr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserSupLimitCr
		{
			get
			{
				return this._UserSupLimitCr;
			}
			set
			{
				if ((this._UserSupLimitCr != value))
				{
					this.OnUserSupLimitCrChanging(value);
					this.SendPropertyChanging();
					this._UserSupLimitCr = value;
					this.SendPropertyChanged("UserSupLimitCr");
					this.OnUserSupLimitCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODLimit", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ODLimit
		{
			get
			{
				return this._ODLimit;
			}
			set
			{
				if ((this._ODLimit != value))
				{
					this.OnODLimitChanging(value);
					this.SendPropertyChanging();
					this._ODLimit = value;
					this.SendPropertyChanged("ODLimit");
					this.OnODLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBATranLimitDr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IBATranLimitDr
		{
			get
			{
				return this._IBATranLimitDr;
			}
			set
			{
				if ((this._IBATranLimitDr != value))
				{
					this.OnIBATranLimitDrChanging(value);
					this.SendPropertyChanging();
					this._IBATranLimitDr = value;
					this.SendPropertyChanged("IBATranLimitDr");
					this.OnIBATranLimitDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBATranLimitCr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IBATranLimitCr
		{
			get
			{
				return this._IBATranLimitCr;
			}
			set
			{
				if ((this._IBATranLimitCr != value))
				{
					this.OnIBATranLimitCrChanging(value);
					this.SendPropertyChanging();
					this._IBATranLimitCr = value;
					this.SendPropertyChanged("IBATranLimitCr");
					this.OnIBATranLimitCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBATranSupLimitDr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IBATranSupLimitDr
		{
			get
			{
				return this._IBATranSupLimitDr;
			}
			set
			{
				if ((this._IBATranSupLimitDr != value))
				{
					this.OnIBATranSupLimitDrChanging(value);
					this.SendPropertyChanging();
					this._IBATranSupLimitDr = value;
					this.SendPropertyChanged("IBATranSupLimitDr");
					this.OnIBATranSupLimitDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBATranSupLimitCr", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IBATranSupLimitCr
		{
			get
			{
				return this._IBATranSupLimitCr;
			}
			set
			{
				if ((this._IBATranSupLimitCr != value))
				{
					this.OnIBATranSupLimitCrChanging(value);
					this.SendPropertyChanging();
					this._IBATranSupLimitCr = value;
					this.SendPropertyChanged("IBATranSupLimitCr");
					this.OnIBATranSupLimitCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(4000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppLevel", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AppLevel
		{
			get
			{
				return this._AppLevel;
			}
			set
			{
				if ((this._AppLevel != value))
				{
					if (this._RefUserLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppLevelChanging(value);
					this.SendPropertyChanging();
					this._AppLevel = value;
					this.SendPropertyChanged("AppLevel");
					this.OnAppLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AppDate
		{
			get
			{
				return this._AppDate;
			}
			set
			{
				if ((this._AppDate != value))
				{
					this.OnAppDateChanging(value);
					this.SendPropertyChanging();
					this._AppDate = value;
					this.SendPropertyChanged("AppDate");
					this.OnAppDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TranDate
		{
			get
			{
				return this._TranDate;
			}
			set
			{
				if ((this._TranDate != value))
				{
					this.OnTranDateChanging(value);
					this.SendPropertyChanging();
					this._TranDate = value;
					this.SendPropertyChanged("TranDate");
					this.OnTranDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarksFromITOps", DbType="VarChar(4000)")]
		public string RemarksFromITOps
		{
			get
			{
				return this._RemarksFromITOps;
			}
			set
			{
				if ((this._RemarksFromITOps != value))
				{
					this.OnRemarksFromITOpsChanging(value);
					this.SendPropertyChanging();
					this._RemarksFromITOps = value;
					this.SendPropertyChanged("RemarksFromITOps");
					this.OnRemarksFromITOpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDecline", DbType="Bit")]
		public System.Nullable<bool> IsDecline
		{
			get
			{
				return this._IsDecline;
			}
			set
			{
				if ((this._IsDecline != value))
				{
					this.OnIsDeclineChanging(value);
					this.SendPropertyChanging();
					this._IsDecline = value;
					this.SendPropertyChanged("IsDecline");
					this.OnIsDeclineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclineBy", DbType="NVarChar(50)")]
		public string DeclineBy
		{
			get
			{
				return this._DeclineBy;
			}
			set
			{
				if ((this._DeclineBy != value))
				{
					this.OnDeclineByChanging(value);
					this.SendPropertyChanging();
					this._DeclineBy = value;
					this.SendPropertyChanged("DeclineBy");
					this.OnDeclineByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserExistingID", DbType="VarChar(250)")]
		public string UserExistingID
		{
			get
			{
				return this._UserExistingID;
			}
			set
			{
				if ((this._UserExistingID != value))
				{
					this.OnUserExistingIDChanging(value);
					this.SendPropertyChanging();
					this._UserExistingID = value;
					this.SendPropertyChanged("UserExistingID");
					this.OnUserExistingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupComplete", DbType="Bit")]
		public System.Nullable<bool> IsSupComplete
		{
			get
			{
				return this._IsSupComplete;
			}
			set
			{
				if ((this._IsSupComplete != value))
				{
					this.OnIsSupCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsSupComplete = value;
					this.SendPropertyChanged("IsSupComplete");
					this.OnIsSupCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OppsITUser", DbType="NVarChar(50)")]
		public string OppsITUser
		{
			get
			{
				return this._OppsITUser;
			}
			set
			{
				if ((this._OppsITUser != value))
				{
					this.OnOppsITUserChanging(value);
					this.SendPropertyChanging();
					this._OppsITUser = value;
					this.SendPropertyChanged("OppsITUser");
					this.OnOppsITUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclineReason", DbType="VarChar(4000)")]
		public string DeclineReason
		{
			get
			{
				return this._DeclineReason;
			}
			set
			{
				if ((this._DeclineReason != value))
				{
					this.OnDeclineReasonChanging(value);
					this.SendPropertyChanging();
					this._DeclineReason = value;
					this.SendPropertyChanged("DeclineReason");
					this.OnDeclineReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefDivision_Application", Storage="_RefDivision", ThisKey="DivisionID", OtherKey="DivisionID", IsForeignKey=true)]
		public RefDivision RefDivision
		{
			get
			{
				return this._RefDivision.Entity;
			}
			set
			{
				RefDivision previousValue = this._RefDivision.Entity;
				if (((previousValue != value) 
							|| (this._RefDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefDivision.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._RefDivision.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._DivisionID = value.DivisionID;
					}
					else
					{
						this._DivisionID = default(decimal);
					}
					this.SendPropertyChanged("RefDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefSystemRole_Application", Storage="_RefSystemRole", ThisKey="SystemRoleID", OtherKey="SystemRoleID", IsForeignKey=true)]
		public RefSystemRole RefSystemRole
		{
			get
			{
				return this._RefSystemRole.Entity;
			}
			set
			{
				RefSystemRole previousValue = this._RefSystemRole.Entity;
				if (((previousValue != value) 
							|| (this._RefSystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefSystemRole.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._RefSystemRole.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._SystemRoleID = value.SystemRoleID;
					}
					else
					{
						this._SystemRoleID = default(decimal);
					}
					this.SendPropertyChanged("RefSystemRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefUserLevel_Application", Storage="_RefUserLevel", ThisKey="AppLevel", OtherKey="LevelID", IsForeignKey=true)]
		public RefUserLevel RefUserLevel
		{
			get
			{
				return this._RefUserLevel.Entity;
			}
			set
			{
				RefUserLevel previousValue = this._RefUserLevel.Entity;
				if (((previousValue != value) 
							|| (this._RefUserLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefUserLevel.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._RefUserLevel.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._AppLevel = value.LevelID;
					}
					else
					{
						this._AppLevel = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("RefUserLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppProcessCmpt")]
	public partial class AppProcessCmpt
	{
		
		private decimal _AppID;
		
		private string _UserID;
		
		private string _OppsRemarks;
		
		private System.DateTime _UpdateDate;
		
		public AppProcessCmpt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Decimal(18,0) NOT NULL")]
		public decimal AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this._AppID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OppsRemarks", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string OppsRemarks
		{
			get
			{
				return this._OppsRemarks;
			}
			set
			{
				if ((this._OppsRemarks != value))
				{
					this._OppsRemarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanySettings")]
	public partial class CompanySetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _OrgID;
		
		private string _OrganizationName;
		
		private string _NetworkDomain;
		
		private System.Nullable<int> _PasswordExpireIndays;
		
		private System.Data.Linq.Binary _CompanyLogo;
		
		private System.Nullable<int> _passwordtryies;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _PhoneNums;
		
		private string _FaxNums;
		
		private EntitySet<UserManager> _UserManagers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(decimal value);
    partial void OnOrgIDChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnNetworkDomainChanging(string value);
    partial void OnNetworkDomainChanged();
    partial void OnPasswordExpireIndaysChanging(System.Nullable<int> value);
    partial void OnPasswordExpireIndaysChanged();
    partial void OnCompanyLogoChanging(System.Data.Linq.Binary value);
    partial void OnCompanyLogoChanged();
    partial void OnpasswordtryiesChanging(System.Nullable<int> value);
    partial void OnpasswordtryiesChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnAddressLine3Changing(string value);
    partial void OnAddressLine3Changed();
    partial void OnPhoneNumsChanging(string value);
    partial void OnPhoneNumsChanged();
    partial void OnFaxNumsChanging(string value);
    partial void OnFaxNumsChanged();
    #endregion
		
		public CompanySetting()
		{
			this._UserManagers = new EntitySet<UserManager>(new Action<UserManager>(this.attach_UserManagers), new Action<UserManager>(this.detach_UserManagers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(50)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkDomain", DbType="VarChar(50)")]
		public string NetworkDomain
		{
			get
			{
				return this._NetworkDomain;
			}
			set
			{
				if ((this._NetworkDomain != value))
				{
					this.OnNetworkDomainChanging(value);
					this.SendPropertyChanging();
					this._NetworkDomain = value;
					this.SendPropertyChanged("NetworkDomain");
					this.OnNetworkDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordExpireIndays", DbType="Int")]
		public System.Nullable<int> PasswordExpireIndays
		{
			get
			{
				return this._PasswordExpireIndays;
			}
			set
			{
				if ((this._PasswordExpireIndays != value))
				{
					this.OnPasswordExpireIndaysChanging(value);
					this.SendPropertyChanging();
					this._PasswordExpireIndays = value;
					this.SendPropertyChanged("PasswordExpireIndays");
					this.OnPasswordExpireIndaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordtryies", DbType="Int")]
		public System.Nullable<int> passwordtryies
		{
			get
			{
				return this._passwordtryies;
			}
			set
			{
				if ((this._passwordtryies != value))
				{
					this.OnpasswordtryiesChanging(value);
					this.SendPropertyChanging();
					this._passwordtryies = value;
					this.SendPropertyChanged("passwordtryies");
					this.OnpasswordtryiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(50)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(50)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine3", DbType="VarChar(50)")]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this.OnAddressLine3Changing(value);
					this.SendPropertyChanging();
					this._AddressLine3 = value;
					this.SendPropertyChanged("AddressLine3");
					this.OnAddressLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNums", DbType="VarChar(50)")]
		public string PhoneNums
		{
			get
			{
				return this._PhoneNums;
			}
			set
			{
				if ((this._PhoneNums != value))
				{
					this.OnPhoneNumsChanging(value);
					this.SendPropertyChanging();
					this._PhoneNums = value;
					this.SendPropertyChanged("PhoneNums");
					this.OnPhoneNumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNums", DbType="VarChar(50)")]
		public string FaxNums
		{
			get
			{
				return this._FaxNums;
			}
			set
			{
				if ((this._FaxNums != value))
				{
					this.OnFaxNumsChanging(value);
					this.SendPropertyChanging();
					this._FaxNums = value;
					this.SendPropertyChanged("FaxNums");
					this.OnFaxNumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanySetting_UserManager", Storage="_UserManagers", ThisKey="OrgID", OtherKey="OrgID")]
		public EntitySet<UserManager> UserManagers
		{
			get
			{
				return this._UserManagers;
			}
			set
			{
				this._UserManagers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.CompanySetting = this;
		}
		
		private void detach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.CompanySetting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.departments")]
	public partial class department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _D_id;
		
		private string _department_name;
		
		private string _department_email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnD_idChanging(int value);
    partial void OnD_idChanged();
    partial void Ondepartment_nameChanging(string value);
    partial void Ondepartment_nameChanged();
    partial void Ondepartment_emailChanging(string value);
    partial void Ondepartment_emailChanged();
    #endregion
		
		public department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int D_id
		{
			get
			{
				return this._D_id;
			}
			set
			{
				if ((this._D_id != value))
				{
					this.OnD_idChanging(value);
					this.SendPropertyChanging();
					this._D_id = value;
					this.SendPropertyChanged("D_id");
					this.OnD_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="VarChar(30)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this.Ondepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._department_name = value;
					this.SendPropertyChanged("department_name");
					this.Ondepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_email", DbType="VarChar(20)")]
		public string department_email
		{
			get
			{
				return this._department_email;
			}
			set
			{
				if ((this._department_email != value))
				{
					this.Ondepartment_emailChanging(value);
					this.SendPropertyChanging();
					this._department_email = value;
					this.SendPropertyChanged("department_email");
					this.Ondepartment_emailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emailStatus")]
	public partial class emailStatus
	{
		
		private decimal _AppID;
		
		private string _UserID;
		
		private string _EmailSentTo;
		
		private string _Status;
		
		private System.Nullable<bool> _IsEmailSent;
		
		public emailStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Decimal(18,0) NOT NULL")]
		public decimal AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this._AppID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSentTo", DbType="VarChar(255)")]
		public string EmailSentTo
		{
			get
			{
				return this._EmailSentTo;
			}
			set
			{
				if ((this._EmailSentTo != value))
				{
					this._EmailSentTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailSent", DbType="Bit")]
		public System.Nullable<bool> IsEmailSent
		{
			get
			{
				return this._IsEmailSent;
			}
			set
			{
				if ((this._IsEmailSent != value))
				{
					this._IsEmailSent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormNames")]
	public partial class FormName
	{
		
		private string _FormName1;
		
		private string _FormDesc;
		
		private decimal _RightID;
		
		public FormName()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FormName", Storage="_FormName1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormName1
		{
			get
			{
				return this._FormName1;
			}
			set
			{
				if ((this._FormName1 != value))
				{
					this._FormName1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDesc", DbType="VarChar(50)")]
		public string FormDesc
		{
			get
			{
				return this._FormDesc;
			}
			set
			{
				if ((this._FormDesc != value))
				{
					this._FormDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightID", DbType="Decimal(18,0) NOT NULL")]
		public decimal RightID
		{
			get
			{
				return this._RightID;
			}
			set
			{
				if ((this._RightID != value))
				{
					this._RightID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormRights")]
	public partial class FormRight
	{
		
		private System.Nullable<System.Guid> _SrNo;
		
		private string _UserID;
		
		private string _FormName;
		
		private decimal _RightID;
		
		private bool _Granted;
		
		public FormRight()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrNo", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SrNo
		{
			get
			{
				return this._SrNo;
			}
			set
			{
				if ((this._SrNo != value))
				{
					this._SrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this._FormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightID", DbType="Decimal(18,0) NOT NULL")]
		public decimal RightID
		{
			get
			{
				return this._RightID;
			}
			set
			{
				if ((this._RightID != value))
				{
					this._RightID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Granted", DbType="Bit NOT NULL")]
		public bool Granted
		{
			get
			{
				return this._Granted;
			}
			set
			{
				if ((this._Granted != value))
				{
					this._Granted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New
	{
		
		private decimal _NewsCode;
		
		private string _News;
		
		private System.Nullable<System.DateTime> _NewsDate;
		
		private System.Nullable<bool> _IsNewsActive;
		
		public New()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsCode", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true)]
		public decimal NewsCode
		{
			get
			{
				return this._NewsCode;
			}
			set
			{
				if ((this._NewsCode != value))
				{
					this._NewsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_News", DbType="VarChar(268)")]
		public string News
		{
			get
			{
				return this._News;
			}
			set
			{
				if ((this._News != value))
				{
					this._News = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NewsDate
		{
			get
			{
				return this._NewsDate;
			}
			set
			{
				if ((this._NewsDate != value))
				{
					this._NewsDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewsActive", DbType="Bit")]
		public System.Nullable<bool> IsNewsActive
		{
			get
			{
				return this._IsNewsActive;
			}
			set
			{
				if ((this._IsNewsActive != value))
				{
					this._IsNewsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OraServerInfo")]
	public partial class OraServerInfo
	{
		
		private decimal _ServerID;
		
		private string _ServarName;
		
		private string _ServerIP;
		
		private string _ServerUser;
		
		private string _ServerPassword;
		
		private string _ServerConnectionString;
		
		private string _DNS;
		
		private System.Nullable<bool> _IsActive;
		
		public OraServerInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ServerID
		{
			get
			{
				return this._ServerID;
			}
			set
			{
				if ((this._ServerID != value))
				{
					this._ServerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServarName", DbType="NVarChar(200)")]
		public string ServarName
		{
			get
			{
				return this._ServarName;
			}
			set
			{
				if ((this._ServarName != value))
				{
					this._ServarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerIP", DbType="VarChar(50)")]
		public string ServerIP
		{
			get
			{
				return this._ServerIP;
			}
			set
			{
				if ((this._ServerIP != value))
				{
					this._ServerIP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerUser", DbType="VarChar(250)")]
		public string ServerUser
		{
			get
			{
				return this._ServerUser;
			}
			set
			{
				if ((this._ServerUser != value))
				{
					this._ServerUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPassword", DbType="VarChar(50)")]
		public string ServerPassword
		{
			get
			{
				return this._ServerPassword;
			}
			set
			{
				if ((this._ServerPassword != value))
				{
					this._ServerPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerConnectionString", DbType="VarChar(4000)")]
		public string ServerConnectionString
		{
			get
			{
				return this._ServerConnectionString;
			}
			set
			{
				if ((this._ServerConnectionString != value))
				{
					this._ServerConnectionString = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNS", DbType="VarChar(50)")]
		public string DNS
		{
			get
			{
				return this._DNS;
			}
			set
			{
				if ((this._DNS != value))
				{
					this._DNS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefActivity")]
	public partial class RefActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityID;
		
		private string _ActivityDes;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _ActivityActive;
		
		private EntitySet<RefComplaint> _RefComplaints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnActivityDesChanging(string value);
    partial void OnActivityDesChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnActivityActiveChanging(System.Nullable<bool> value);
    partial void OnActivityActiveChanged();
    #endregion
		
		public RefActivity()
		{
			this._RefComplaints = new EntitySet<RefComplaint>(new Action<RefComplaint>(this.attach_RefComplaints), new Action<RefComplaint>(this.detach_RefComplaints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDes", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ActivityDes
		{
			get
			{
				return this._ActivityDes;
			}
			set
			{
				if ((this._ActivityDes != value))
				{
					this.OnActivityDesChanging(value);
					this.SendPropertyChanging();
					this._ActivityDes = value;
					this.SendPropertyChanged("ActivityDes");
					this.OnActivityDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityActive", DbType="Bit")]
		public System.Nullable<bool> ActivityActive
		{
			get
			{
				return this._ActivityActive;
			}
			set
			{
				if ((this._ActivityActive != value))
				{
					this.OnActivityActiveChanging(value);
					this.SendPropertyChanging();
					this._ActivityActive = value;
					this.SendPropertyChanged("ActivityActive");
					this.OnActivityActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefActivity_RefComplaint", Storage="_RefComplaints", ThisKey="ActivityID", OtherKey="ActivityID")]
		public EntitySet<RefComplaint> RefComplaints
		{
			get
			{
				return this._RefComplaints;
			}
			set
			{
				this._RefComplaints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.RefActivity = this;
		}
		
		private void detach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.RefActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefActivityDetails")]
	public partial class RefActivityDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _RefActivityId;
		
		private decimal _complaint_id;
		
		private int _ActivityID;
		
		private string _Activity_description;
		
		private System.Nullable<System.DateTime> _Activity_time;
		
		private string _Activity_performed_by;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefActivityIdChanging(decimal value);
    partial void OnRefActivityIdChanged();
    partial void Oncomplaint_idChanging(decimal value);
    partial void Oncomplaint_idChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnActivity_descriptionChanging(string value);
    partial void OnActivity_descriptionChanged();
    partial void OnActivity_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnActivity_timeChanged();
    partial void OnActivity_performed_byChanging(string value);
    partial void OnActivity_performed_byChanged();
    #endregion
		
		public RefActivityDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefActivityId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal RefActivityId
		{
			get
			{
				return this._RefActivityId;
			}
			set
			{
				if ((this._RefActivityId != value))
				{
					this.OnRefActivityIdChanging(value);
					this.SendPropertyChanging();
					this._RefActivityId = value;
					this.SendPropertyChanged("RefActivityId");
					this.OnRefActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complaint_id", DbType="Decimal(18,0) NOT NULL")]
		public decimal complaint_id
		{
			get
			{
				return this._complaint_id;
			}
			set
			{
				if ((this._complaint_id != value))
				{
					this.Oncomplaint_idChanging(value);
					this.SendPropertyChanging();
					this._complaint_id = value;
					this.SendPropertyChanged("complaint_id");
					this.Oncomplaint_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_description", DbType="VarChar(500)")]
		public string Activity_description
		{
			get
			{
				return this._Activity_description;
			}
			set
			{
				if ((this._Activity_description != value))
				{
					this.OnActivity_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Activity_description = value;
					this.SendPropertyChanged("Activity_description");
					this.OnActivity_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Activity_time
		{
			get
			{
				return this._Activity_time;
			}
			set
			{
				if ((this._Activity_time != value))
				{
					this.OnActivity_timeChanging(value);
					this.SendPropertyChanging();
					this._Activity_time = value;
					this.SendPropertyChanged("Activity_time");
					this.OnActivity_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_performed_by", DbType="NChar(50)")]
		public string Activity_performed_by
		{
			get
			{
				return this._Activity_performed_by;
			}
			set
			{
				if ((this._Activity_performed_by != value))
				{
					this.OnActivity_performed_byChanging(value);
					this.SendPropertyChanging();
					this._Activity_performed_by = value;
					this.SendPropertyChanged("Activity_performed_by");
					this.OnActivity_performed_byChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefComplaints")]
	public partial class RefComplaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _complaint_id;
		
		private string _subject;
		
		private string _category;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _Assigne_to;
		
		private string _priority;
		
		private string _location;
		
		private string _status;
		
		private string _url;
		
		private string _desription;
		
		private string _remarks;
		
		private decimal _ProjectCatID;
		
		private int _ActivityID;
		
		private string _Assign_By;
		
		private System.Nullable<decimal> _Reported_problem_ID;
		
		private System.Nullable<decimal> _Reported_channel_ID;
		
		private System.Nullable<decimal> _emp_id;
		
		private string _emp_designation;
		
		private string _emp_name;
		
		private string _Reporters_email;
		
		private string _Reporters_number;
		
		private EntityRef<RefActivity> _RefActivity;
		
		private EntityRef<RefProjectCateg> _RefProjectCateg;
		
		private EntityRef<UserManager> _UserManager;
		
		private EntityRef<UserManager> _UserManager1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomplaint_idChanging(decimal value);
    partial void Oncomplaint_idChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnAssigne_toChanging(string value);
    partial void OnAssigne_toChanged();
    partial void OnpriorityChanging(string value);
    partial void OnpriorityChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OndesriptionChanging(string value);
    partial void OndesriptionChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnProjectCatIDChanging(decimal value);
    partial void OnProjectCatIDChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnAssign_ByChanging(string value);
    partial void OnAssign_ByChanged();
    partial void OnReported_problem_IDChanging(System.Nullable<decimal> value);
    partial void OnReported_problem_IDChanged();
    partial void OnReported_channel_IDChanging(System.Nullable<decimal> value);
    partial void OnReported_channel_IDChanged();
    partial void Onemp_idChanging(System.Nullable<decimal> value);
    partial void Onemp_idChanged();
    partial void Onemp_designationChanging(string value);
    partial void Onemp_designationChanged();
    partial void Onemp_nameChanging(string value);
    partial void Onemp_nameChanged();
    partial void OnReporters_emailChanging(string value);
    partial void OnReporters_emailChanged();
    partial void OnReporters_numberChanging(string value);
    partial void OnReporters_numberChanged();
    #endregion
		
		public RefComplaint()
		{
			this._RefActivity = default(EntityRef<RefActivity>);
			this._RefProjectCateg = default(EntityRef<RefProjectCateg>);
			this._UserManager = default(EntityRef<UserManager>);
			this._UserManager1 = default(EntityRef<UserManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complaint_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal complaint_id
		{
			get
			{
				return this._complaint_id;
			}
			set
			{
				if ((this._complaint_id != value))
				{
					this.Oncomplaint_idChanging(value);
					this.SendPropertyChanging();
					this._complaint_id = value;
					this.SendPropertyChanged("complaint_id");
					this.Oncomplaint_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(50)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigne_to", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Assigne_to
		{
			get
			{
				return this._Assigne_to;
			}
			set
			{
				if ((this._Assigne_to != value))
				{
					if (this._UserManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssigne_toChanging(value);
					this.SendPropertyChanging();
					this._Assigne_to = value;
					this.SendPropertyChanged("Assigne_to");
					this.OnAssigne_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Char(10)")]
		public string priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(10)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(50)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desription", DbType="VarChar(500)")]
		public string desription
		{
			get
			{
				return this._desription;
			}
			set
			{
				if ((this._desription != value))
				{
					this.OndesriptionChanging(value);
					this.SendPropertyChanging();
					this._desription = value;
					this.SendPropertyChanged("desription");
					this.OndesriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="VarChar(500)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCatID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ProjectCatID
		{
			get
			{
				return this._ProjectCatID;
			}
			set
			{
				if ((this._ProjectCatID != value))
				{
					if (this._RefProjectCateg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectCatIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectCatID = value;
					this.SendPropertyChanged("ProjectCatID");
					this.OnProjectCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					if (this._RefActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assign_By", DbType="NVarChar(50)")]
		public string Assign_By
		{
			get
			{
				return this._Assign_By;
			}
			set
			{
				if ((this._Assign_By != value))
				{
					if (this._UserManager1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssign_ByChanging(value);
					this.SendPropertyChanging();
					this._Assign_By = value;
					this.SendPropertyChanged("Assign_By");
					this.OnAssign_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported_problem_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Reported_problem_ID
		{
			get
			{
				return this._Reported_problem_ID;
			}
			set
			{
				if ((this._Reported_problem_ID != value))
				{
					this.OnReported_problem_IDChanging(value);
					this.SendPropertyChanging();
					this._Reported_problem_ID = value;
					this.SendPropertyChanged("Reported_problem_ID");
					this.OnReported_problem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported_channel_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Reported_channel_ID
		{
			get
			{
				return this._Reported_channel_ID;
			}
			set
			{
				if ((this._Reported_channel_ID != value))
				{
					this.OnReported_channel_IDChanging(value);
					this.SendPropertyChanging();
					this._Reported_channel_ID = value;
					this.SendPropertyChanged("Reported_channel_ID");
					this.OnReported_channel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_designation", DbType="VarChar(50)")]
		public string emp_designation
		{
			get
			{
				return this._emp_designation;
			}
			set
			{
				if ((this._emp_designation != value))
				{
					this.Onemp_designationChanging(value);
					this.SendPropertyChanging();
					this._emp_designation = value;
					this.SendPropertyChanged("emp_designation");
					this.Onemp_designationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_name", DbType="VarChar(50)")]
		public string emp_name
		{
			get
			{
				return this._emp_name;
			}
			set
			{
				if ((this._emp_name != value))
				{
					this.Onemp_nameChanging(value);
					this.SendPropertyChanging();
					this._emp_name = value;
					this.SendPropertyChanged("emp_name");
					this.Onemp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporters_email", DbType="NVarChar(50)")]
		public string Reporters_email
		{
			get
			{
				return this._Reporters_email;
			}
			set
			{
				if ((this._Reporters_email != value))
				{
					this.OnReporters_emailChanging(value);
					this.SendPropertyChanging();
					this._Reporters_email = value;
					this.SendPropertyChanged("Reporters_email");
					this.OnReporters_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporters_number", DbType="NVarChar(50)")]
		public string Reporters_number
		{
			get
			{
				return this._Reporters_number;
			}
			set
			{
				if ((this._Reporters_number != value))
				{
					this.OnReporters_numberChanging(value);
					this.SendPropertyChanging();
					this._Reporters_number = value;
					this.SendPropertyChanged("Reporters_number");
					this.OnReporters_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefActivity_RefComplaint", Storage="_RefActivity", ThisKey="ActivityID", OtherKey="ActivityID", IsForeignKey=true)]
		public RefActivity RefActivity
		{
			get
			{
				return this._RefActivity.Entity;
			}
			set
			{
				RefActivity previousValue = this._RefActivity.Entity;
				if (((previousValue != value) 
							|| (this._RefActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefActivity.Entity = null;
						previousValue.RefComplaints.Remove(this);
					}
					this._RefActivity.Entity = value;
					if ((value != null))
					{
						value.RefComplaints.Add(this);
						this._ActivityID = value.ActivityID;
					}
					else
					{
						this._ActivityID = default(int);
					}
					this.SendPropertyChanged("RefActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProjectCateg_RefComplaint", Storage="_RefProjectCateg", ThisKey="ProjectCatID", OtherKey="ProjectCatID", IsForeignKey=true)]
		public RefProjectCateg RefProjectCateg
		{
			get
			{
				return this._RefProjectCateg.Entity;
			}
			set
			{
				RefProjectCateg previousValue = this._RefProjectCateg.Entity;
				if (((previousValue != value) 
							|| (this._RefProjectCateg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefProjectCateg.Entity = null;
						previousValue.RefComplaints.Remove(this);
					}
					this._RefProjectCateg.Entity = value;
					if ((value != null))
					{
						value.RefComplaints.Add(this);
						this._ProjectCatID = value.ProjectCatID;
					}
					else
					{
						this._ProjectCatID = default(decimal);
					}
					this.SendPropertyChanged("RefProjectCateg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_RefComplaint", Storage="_UserManager", ThisKey="Assigne_to", OtherKey="UserID", IsForeignKey=true)]
		public UserManager UserManager
		{
			get
			{
				return this._UserManager.Entity;
			}
			set
			{
				UserManager previousValue = this._UserManager.Entity;
				if (((previousValue != value) 
							|| (this._UserManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManager.Entity = null;
						previousValue.RefComplaints.Remove(this);
					}
					this._UserManager.Entity = value;
					if ((value != null))
					{
						value.RefComplaints.Add(this);
						this._Assigne_to = value.UserID;
					}
					else
					{
						this._Assigne_to = default(string);
					}
					this.SendPropertyChanged("UserManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_RefComplaint1", Storage="_UserManager1", ThisKey="Assign_By", OtherKey="UserID", IsForeignKey=true)]
		public UserManager UserManager1
		{
			get
			{
				return this._UserManager1.Entity;
			}
			set
			{
				UserManager previousValue = this._UserManager1.Entity;
				if (((previousValue != value) 
							|| (this._UserManager1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManager1.Entity = null;
						previousValue.RefComplaints1.Remove(this);
					}
					this._UserManager1.Entity = value;
					if ((value != null))
					{
						value.RefComplaints1.Add(this);
						this._Assign_By = value.UserID;
					}
					else
					{
						this._Assign_By = default(string);
					}
					this.SendPropertyChanged("UserManager1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefDivision")]
	public partial class RefDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _DivisionID;
		
		private string _DivisionDesc;
		
		private System.Nullable<bool> _IsDivisionActive;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<RefSystemRole> _RefSystemRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIDChanging(decimal value);
    partial void OnDivisionIDChanged();
    partial void OnDivisionDescChanging(string value);
    partial void OnDivisionDescChanged();
    partial void OnIsDivisionActiveChanging(System.Nullable<bool> value);
    partial void OnIsDivisionActiveChanged();
    #endregion
		
		public RefDivision()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._RefSystemRoles = new EntitySet<RefSystemRole>(new Action<RefSystemRole>(this.attach_RefSystemRoles), new Action<RefSystemRole>(this.detach_RefSystemRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionDesc", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DivisionDesc
		{
			get
			{
				return this._DivisionDesc;
			}
			set
			{
				if ((this._DivisionDesc != value))
				{
					this.OnDivisionDescChanging(value);
					this.SendPropertyChanging();
					this._DivisionDesc = value;
					this.SendPropertyChanged("DivisionDesc");
					this.OnDivisionDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDivisionActive", DbType="Bit")]
		public System.Nullable<bool> IsDivisionActive
		{
			get
			{
				return this._IsDivisionActive;
			}
			set
			{
				if ((this._IsDivisionActive != value))
				{
					this.OnIsDivisionActiveChanging(value);
					this.SendPropertyChanging();
					this._IsDivisionActive = value;
					this.SendPropertyChanged("IsDivisionActive");
					this.OnIsDivisionActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefDivision_Application", Storage="_Applications", ThisKey="DivisionID", OtherKey="DivisionID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefDivision_RefSystemRole", Storage="_RefSystemRoles", ThisKey="DivisionID", OtherKey="DivisionID")]
		public EntitySet<RefSystemRole> RefSystemRoles
		{
			get
			{
				return this._RefSystemRoles;
			}
			set
			{
				this._RefSystemRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefDivision = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefDivision = null;
		}
		
		private void attach_RefSystemRoles(RefSystemRole entity)
		{
			this.SendPropertyChanging();
			entity.RefDivision = this;
		}
		
		private void detach_RefSystemRoles(RefSystemRole entity)
		{
			this.SendPropertyChanging();
			entity.RefDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefLocation")]
	public partial class RefLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _LocationDes;
		
		private System.Nullable<int> _BrSequence;
		
		private System.Nullable<bool> _BlockLocation;
		
		private string _PersonA;
		
		private string _PersonB;
		
		private string _PersonAName;
		
		private string _PersonAEmail;
		
		private string _PersonBEmail;
		
		private System.Nullable<bool> _BlockForActionReg;
		
		private System.Nullable<bool> _BlockForBranchStatus;
		
		private System.Nullable<bool> _BlockForITCheckList;
		
		private System.Nullable<bool> _BlockForSignatureView;
		
		private string _BranchAppServerIP;
		
		private string _BranchAppServerName;
		
		private string _BranchDBServerIP;
		
		private string _BranchDBServerName;
		
		private string _LocCoorName;
		
		private string _LocCoorPhoneNo;
		
		private string _LocPhoneNo;
		
		private string _LocAddress;
		
		private System.Nullable<bool> _LocSendEmail;
		
		private string _OraTNS;
		
		private EntitySet<UserManager> _UserManagers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationDesChanging(string value);
    partial void OnLocationDesChanged();
    partial void OnBrSequenceChanging(System.Nullable<int> value);
    partial void OnBrSequenceChanged();
    partial void OnBlockLocationChanging(System.Nullable<bool> value);
    partial void OnBlockLocationChanged();
    partial void OnPersonAChanging(string value);
    partial void OnPersonAChanged();
    partial void OnPersonBChanging(string value);
    partial void OnPersonBChanged();
    partial void OnPersonANameChanging(string value);
    partial void OnPersonANameChanged();
    partial void OnPersonAEmailChanging(string value);
    partial void OnPersonAEmailChanged();
    partial void OnPersonBEmailChanging(string value);
    partial void OnPersonBEmailChanged();
    partial void OnBlockForActionRegChanging(System.Nullable<bool> value);
    partial void OnBlockForActionRegChanged();
    partial void OnBlockForBranchStatusChanging(System.Nullable<bool> value);
    partial void OnBlockForBranchStatusChanged();
    partial void OnBlockForITCheckListChanging(System.Nullable<bool> value);
    partial void OnBlockForITCheckListChanged();
    partial void OnBlockForSignatureViewChanging(System.Nullable<bool> value);
    partial void OnBlockForSignatureViewChanged();
    partial void OnBranchAppServerIPChanging(string value);
    partial void OnBranchAppServerIPChanged();
    partial void OnBranchAppServerNameChanging(string value);
    partial void OnBranchAppServerNameChanged();
    partial void OnBranchDBServerIPChanging(string value);
    partial void OnBranchDBServerIPChanged();
    partial void OnBranchDBServerNameChanging(string value);
    partial void OnBranchDBServerNameChanged();
    partial void OnLocCoorNameChanging(string value);
    partial void OnLocCoorNameChanged();
    partial void OnLocCoorPhoneNoChanging(string value);
    partial void OnLocCoorPhoneNoChanged();
    partial void OnLocPhoneNoChanging(string value);
    partial void OnLocPhoneNoChanged();
    partial void OnLocAddressChanging(string value);
    partial void OnLocAddressChanged();
    partial void OnLocSendEmailChanging(System.Nullable<bool> value);
    partial void OnLocSendEmailChanged();
    partial void OnOraTNSChanging(string value);
    partial void OnOraTNSChanged();
    #endregion
		
		public RefLocation()
		{
			this._UserManagers = new EntitySet<UserManager>(new Action<UserManager>(this.attach_UserManagers), new Action<UserManager>(this.detach_UserManagers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDes", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LocationDes
		{
			get
			{
				return this._LocationDes;
			}
			set
			{
				if ((this._LocationDes != value))
				{
					this.OnLocationDesChanging(value);
					this.SendPropertyChanging();
					this._LocationDes = value;
					this.SendPropertyChanged("LocationDes");
					this.OnLocationDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrSequence", DbType="Int")]
		public System.Nullable<int> BrSequence
		{
			get
			{
				return this._BrSequence;
			}
			set
			{
				if ((this._BrSequence != value))
				{
					this.OnBrSequenceChanging(value);
					this.SendPropertyChanging();
					this._BrSequence = value;
					this.SendPropertyChanged("BrSequence");
					this.OnBrSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockLocation", DbType="Bit")]
		public System.Nullable<bool> BlockLocation
		{
			get
			{
				return this._BlockLocation;
			}
			set
			{
				if ((this._BlockLocation != value))
				{
					this.OnBlockLocationChanging(value);
					this.SendPropertyChanging();
					this._BlockLocation = value;
					this.SendPropertyChanged("BlockLocation");
					this.OnBlockLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonA", DbType="NVarChar(50)")]
		public string PersonA
		{
			get
			{
				return this._PersonA;
			}
			set
			{
				if ((this._PersonA != value))
				{
					this.OnPersonAChanging(value);
					this.SendPropertyChanging();
					this._PersonA = value;
					this.SendPropertyChanged("PersonA");
					this.OnPersonAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonB", DbType="NVarChar(50)")]
		public string PersonB
		{
			get
			{
				return this._PersonB;
			}
			set
			{
				if ((this._PersonB != value))
				{
					this.OnPersonBChanging(value);
					this.SendPropertyChanging();
					this._PersonB = value;
					this.SendPropertyChanged("PersonB");
					this.OnPersonBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonAName", DbType="VarChar(20)")]
		public string PersonAName
		{
			get
			{
				return this._PersonAName;
			}
			set
			{
				if ((this._PersonAName != value))
				{
					this.OnPersonANameChanging(value);
					this.SendPropertyChanging();
					this._PersonAName = value;
					this.SendPropertyChanged("PersonAName");
					this.OnPersonANameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonAEmail", DbType="VarChar(50)")]
		public string PersonAEmail
		{
			get
			{
				return this._PersonAEmail;
			}
			set
			{
				if ((this._PersonAEmail != value))
				{
					this.OnPersonAEmailChanging(value);
					this.SendPropertyChanging();
					this._PersonAEmail = value;
					this.SendPropertyChanged("PersonAEmail");
					this.OnPersonAEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonBEmail", DbType="VarChar(50)")]
		public string PersonBEmail
		{
			get
			{
				return this._PersonBEmail;
			}
			set
			{
				if ((this._PersonBEmail != value))
				{
					this.OnPersonBEmailChanging(value);
					this.SendPropertyChanging();
					this._PersonBEmail = value;
					this.SendPropertyChanged("PersonBEmail");
					this.OnPersonBEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockForActionReg", DbType="Bit")]
		public System.Nullable<bool> BlockForActionReg
		{
			get
			{
				return this._BlockForActionReg;
			}
			set
			{
				if ((this._BlockForActionReg != value))
				{
					this.OnBlockForActionRegChanging(value);
					this.SendPropertyChanging();
					this._BlockForActionReg = value;
					this.SendPropertyChanged("BlockForActionReg");
					this.OnBlockForActionRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockForBranchStatus", DbType="Bit")]
		public System.Nullable<bool> BlockForBranchStatus
		{
			get
			{
				return this._BlockForBranchStatus;
			}
			set
			{
				if ((this._BlockForBranchStatus != value))
				{
					this.OnBlockForBranchStatusChanging(value);
					this.SendPropertyChanging();
					this._BlockForBranchStatus = value;
					this.SendPropertyChanged("BlockForBranchStatus");
					this.OnBlockForBranchStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockForITCheckList", DbType="Bit")]
		public System.Nullable<bool> BlockForITCheckList
		{
			get
			{
				return this._BlockForITCheckList;
			}
			set
			{
				if ((this._BlockForITCheckList != value))
				{
					this.OnBlockForITCheckListChanging(value);
					this.SendPropertyChanging();
					this._BlockForITCheckList = value;
					this.SendPropertyChanged("BlockForITCheckList");
					this.OnBlockForITCheckListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockForSignatureView", DbType="Bit")]
		public System.Nullable<bool> BlockForSignatureView
		{
			get
			{
				return this._BlockForSignatureView;
			}
			set
			{
				if ((this._BlockForSignatureView != value))
				{
					this.OnBlockForSignatureViewChanging(value);
					this.SendPropertyChanging();
					this._BlockForSignatureView = value;
					this.SendPropertyChanged("BlockForSignatureView");
					this.OnBlockForSignatureViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchAppServerIP", DbType="VarChar(50)")]
		public string BranchAppServerIP
		{
			get
			{
				return this._BranchAppServerIP;
			}
			set
			{
				if ((this._BranchAppServerIP != value))
				{
					this.OnBranchAppServerIPChanging(value);
					this.SendPropertyChanging();
					this._BranchAppServerIP = value;
					this.SendPropertyChanged("BranchAppServerIP");
					this.OnBranchAppServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchAppServerName", DbType="VarChar(50)")]
		public string BranchAppServerName
		{
			get
			{
				return this._BranchAppServerName;
			}
			set
			{
				if ((this._BranchAppServerName != value))
				{
					this.OnBranchAppServerNameChanging(value);
					this.SendPropertyChanging();
					this._BranchAppServerName = value;
					this.SendPropertyChanged("BranchAppServerName");
					this.OnBranchAppServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchDBServerIP", DbType="VarChar(50)")]
		public string BranchDBServerIP
		{
			get
			{
				return this._BranchDBServerIP;
			}
			set
			{
				if ((this._BranchDBServerIP != value))
				{
					this.OnBranchDBServerIPChanging(value);
					this.SendPropertyChanging();
					this._BranchDBServerIP = value;
					this.SendPropertyChanged("BranchDBServerIP");
					this.OnBranchDBServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchDBServerName", DbType="VarChar(50)")]
		public string BranchDBServerName
		{
			get
			{
				return this._BranchDBServerName;
			}
			set
			{
				if ((this._BranchDBServerName != value))
				{
					this.OnBranchDBServerNameChanging(value);
					this.SendPropertyChanging();
					this._BranchDBServerName = value;
					this.SendPropertyChanged("BranchDBServerName");
					this.OnBranchDBServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocCoorName", DbType="VarChar(50)")]
		public string LocCoorName
		{
			get
			{
				return this._LocCoorName;
			}
			set
			{
				if ((this._LocCoorName != value))
				{
					this.OnLocCoorNameChanging(value);
					this.SendPropertyChanging();
					this._LocCoorName = value;
					this.SendPropertyChanged("LocCoorName");
					this.OnLocCoorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocCoorPhoneNo", DbType="VarChar(50)")]
		public string LocCoorPhoneNo
		{
			get
			{
				return this._LocCoorPhoneNo;
			}
			set
			{
				if ((this._LocCoorPhoneNo != value))
				{
					this.OnLocCoorPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._LocCoorPhoneNo = value;
					this.SendPropertyChanged("LocCoorPhoneNo");
					this.OnLocCoorPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocPhoneNo", DbType="VarChar(50)")]
		public string LocPhoneNo
		{
			get
			{
				return this._LocPhoneNo;
			}
			set
			{
				if ((this._LocPhoneNo != value))
				{
					this.OnLocPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._LocPhoneNo = value;
					this.SendPropertyChanged("LocPhoneNo");
					this.OnLocPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocAddress", DbType="VarChar(255)")]
		public string LocAddress
		{
			get
			{
				return this._LocAddress;
			}
			set
			{
				if ((this._LocAddress != value))
				{
					this.OnLocAddressChanging(value);
					this.SendPropertyChanging();
					this._LocAddress = value;
					this.SendPropertyChanged("LocAddress");
					this.OnLocAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocSendEmail", DbType="Bit")]
		public System.Nullable<bool> LocSendEmail
		{
			get
			{
				return this._LocSendEmail;
			}
			set
			{
				if ((this._LocSendEmail != value))
				{
					this.OnLocSendEmailChanging(value);
					this.SendPropertyChanging();
					this._LocSendEmail = value;
					this.SendPropertyChanged("LocSendEmail");
					this.OnLocSendEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraTNS", DbType="VarChar(255)")]
		public string OraTNS
		{
			get
			{
				return this._OraTNS;
			}
			set
			{
				if ((this._OraTNS != value))
				{
					this.OnOraTNSChanging(value);
					this.SendPropertyChanging();
					this._OraTNS = value;
					this.SendPropertyChanged("OraTNS");
					this.OnOraTNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefLocation_UserManager", Storage="_UserManagers", ThisKey="LocationID", OtherKey="LocationID")]
		public EntitySet<UserManager> UserManagers
		{
			get
			{
				return this._UserManagers;
			}
			set
			{
				this._UserManagers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.RefLocation = this;
		}
		
		private void detach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.RefLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefPibasCon")]
	public partial class RefPibasCon
	{
		
		private decimal _ConnCode;
		
		private string _ConnDesc;
		
		public RefPibasCon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal ConnCode
		{
			get
			{
				return this._ConnCode;
			}
			set
			{
				if ((this._ConnCode != value))
				{
					this._ConnCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnDesc", DbType="VarChar(50)")]
		public string ConnDesc
		{
			get
			{
				return this._ConnDesc;
			}
			set
			{
				if ((this._ConnDesc != value))
				{
					this._ConnDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefPIBASConn")]
	public partial class RefPIBASConn
	{
		
		private System.Nullable<decimal> _ConnCode;
		
		private string _ConnDesc;
		
		public RefPIBASConn()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnCode", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ConnCode
		{
			get
			{
				return this._ConnCode;
			}
			set
			{
				if ((this._ConnCode != value))
				{
					this._ConnCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnDesc", DbType="VarChar(50)")]
		public string ConnDesc
		{
			get
			{
				return this._ConnDesc;
			}
			set
			{
				if ((this._ConnDesc != value))
				{
					this._ConnDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefProjectCateg")]
	public partial class RefProjectCateg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ProjectCatID;
		
		private string _ProjectCatDesc;
		
		private System.Nullable<decimal> _ProjectID;
		
		private EntitySet<RefComplaint> _RefComplaints;
		
		private EntitySet<sirGroup> _sirGroups;
		
		private EntityRef<RefProject> _RefProject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectCatIDChanging(decimal value);
    partial void OnProjectCatIDChanged();
    partial void OnProjectCatDescChanging(string value);
    partial void OnProjectCatDescChanged();
    partial void OnProjectIDChanging(System.Nullable<decimal> value);
    partial void OnProjectIDChanged();
    #endregion
		
		public RefProjectCateg()
		{
			this._RefComplaints = new EntitySet<RefComplaint>(new Action<RefComplaint>(this.attach_RefComplaints), new Action<RefComplaint>(this.detach_RefComplaints));
			this._sirGroups = new EntitySet<sirGroup>(new Action<sirGroup>(this.attach_sirGroups), new Action<sirGroup>(this.detach_sirGroups));
			this._RefProject = default(EntityRef<RefProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCatID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ProjectCatID
		{
			get
			{
				return this._ProjectCatID;
			}
			set
			{
				if ((this._ProjectCatID != value))
				{
					this.OnProjectCatIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectCatID = value;
					this.SendPropertyChanged("ProjectCatID");
					this.OnProjectCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCatDesc", DbType="VarChar(50)")]
		public string ProjectCatDesc
		{
			get
			{
				return this._ProjectCatDesc;
			}
			set
			{
				if ((this._ProjectCatDesc != value))
				{
					this.OnProjectCatDescChanging(value);
					this.SendPropertyChanging();
					this._ProjectCatDesc = value;
					this.SendPropertyChanged("ProjectCatDesc");
					this.OnProjectCatDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._RefProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProjectCateg_RefComplaint", Storage="_RefComplaints", ThisKey="ProjectCatID", OtherKey="ProjectCatID")]
		public EntitySet<RefComplaint> RefComplaints
		{
			get
			{
				return this._RefComplaints;
			}
			set
			{
				this._RefComplaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProjectCateg_sirGroup", Storage="_sirGroups", ThisKey="ProjectCatID", OtherKey="ProjectCatID")]
		public EntitySet<sirGroup> sirGroups
		{
			get
			{
				return this._sirGroups;
			}
			set
			{
				this._sirGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProject_RefProjectCateg", Storage="_RefProject", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public RefProject RefProject
		{
			get
			{
				return this._RefProject.Entity;
			}
			set
			{
				RefProject previousValue = this._RefProject.Entity;
				if (((previousValue != value) 
							|| (this._RefProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefProject.Entity = null;
						previousValue.RefProjectCategs.Remove(this);
					}
					this._RefProject.Entity = value;
					if ((value != null))
					{
						value.RefProjectCategs.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("RefProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.RefProjectCateg = this;
		}
		
		private void detach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.RefProjectCateg = null;
		}
		
		private void attach_sirGroups(sirGroup entity)
		{
			this.SendPropertyChanging();
			entity.RefProjectCateg = this;
		}
		
		private void detach_sirGroups(sirGroup entity)
		{
			this.SendPropertyChanging();
			entity.RefProjectCateg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefProjects")]
	public partial class RefProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ProjectID;
		
		private string _ProjectDes;
		
		private System.Nullable<bool> _ProjectActive;
		
		private EntitySet<RefProjectCateg> _RefProjectCategs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(decimal value);
    partial void OnProjectIDChanged();
    partial void OnProjectDesChanging(string value);
    partial void OnProjectDesChanged();
    partial void OnProjectActiveChanging(System.Nullable<bool> value);
    partial void OnProjectActiveChanged();
    #endregion
		
		public RefProject()
		{
			this._RefProjectCategs = new EntitySet<RefProjectCateg>(new Action<RefProjectCateg>(this.attach_RefProjectCategs), new Action<RefProjectCateg>(this.detach_RefProjectCategs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDes", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectDes
		{
			get
			{
				return this._ProjectDes;
			}
			set
			{
				if ((this._ProjectDes != value))
				{
					this.OnProjectDesChanging(value);
					this.SendPropertyChanging();
					this._ProjectDes = value;
					this.SendPropertyChanged("ProjectDes");
					this.OnProjectDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectActive", DbType="Bit")]
		public System.Nullable<bool> ProjectActive
		{
			get
			{
				return this._ProjectActive;
			}
			set
			{
				if ((this._ProjectActive != value))
				{
					this.OnProjectActiveChanging(value);
					this.SendPropertyChanging();
					this._ProjectActive = value;
					this.SendPropertyChanged("ProjectActive");
					this.OnProjectActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProject_RefProjectCateg", Storage="_RefProjectCategs", ThisKey="ProjectID", OtherKey="ProjectID")]
		public EntitySet<RefProjectCateg> RefProjectCategs
		{
			get
			{
				return this._RefProjectCategs;
			}
			set
			{
				this._RefProjectCategs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RefProjectCategs(RefProjectCateg entity)
		{
			this.SendPropertyChanging();
			entity.RefProject = this;
		}
		
		private void detach_RefProjectCategs(RefProjectCateg entity)
		{
			this.SendPropertyChanging();
			entity.RefProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[RefReported Problem]")]
	public partial class RefReported_Problem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Reported_problem_ID;
		
		private string _Problem_description;
		
		private decimal _ProjectCatID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReported_problem_IDChanging(decimal value);
    partial void OnReported_problem_IDChanged();
    partial void OnProblem_descriptionChanging(string value);
    partial void OnProblem_descriptionChanged();
    partial void OnProjectCatIDChanging(decimal value);
    partial void OnProjectCatIDChanged();
    #endregion
		
		public RefReported_Problem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported_problem_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Reported_problem_ID
		{
			get
			{
				return this._Reported_problem_ID;
			}
			set
			{
				if ((this._Reported_problem_ID != value))
				{
					this.OnReported_problem_IDChanging(value);
					this.SendPropertyChanging();
					this._Reported_problem_ID = value;
					this.SendPropertyChanged("Reported_problem_ID");
					this.OnReported_problem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Problem_description", DbType="VarChar(100)")]
		public string Problem_description
		{
			get
			{
				return this._Problem_description;
			}
			set
			{
				if ((this._Problem_description != value))
				{
					this.OnProblem_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Problem_description = value;
					this.SendPropertyChanged("Problem_description");
					this.OnProblem_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCatID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ProjectCatID
		{
			get
			{
				return this._ProjectCatID;
			}
			set
			{
				if ((this._ProjectCatID != value))
				{
					this.OnProjectCatIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectCatID = value;
					this.SendPropertyChanged("ProjectCatID");
					this.OnProjectCatIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefRights")]
	public partial class RefRight
	{
		
		private decimal _RightID;
		
		private string _RightDes;
		
		public RefRight()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightID", DbType="Decimal(18,0) NOT NULL")]
		public decimal RightID
		{
			get
			{
				return this._RightID;
			}
			set
			{
				if ((this._RightID != value))
				{
					this._RightID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RightDes
		{
			get
			{
				return this._RightDes;
			}
			set
			{
				if ((this._RightDes != value))
				{
					this._RightDes = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefSystemRole")]
	public partial class RefSystemRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _SystemRoleID;
		
		private decimal _DivisionID;
		
		private decimal _ProjectID;
		
		private string _SystemRole;
		
		private bool _IsSystemRoleActive;
		
		private string _TranCode;
		
		private System.Nullable<decimal> _MaxNoOfSupRequired;
		
		private EntitySet<Application> _Applications;
		
		private EntityRef<RefDivision> _RefDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemRoleIDChanging(decimal value);
    partial void OnSystemRoleIDChanged();
    partial void OnDivisionIDChanging(decimal value);
    partial void OnDivisionIDChanged();
    partial void OnProjectIDChanging(decimal value);
    partial void OnProjectIDChanged();
    partial void OnSystemRoleChanging(string value);
    partial void OnSystemRoleChanged();
    partial void OnIsSystemRoleActiveChanging(bool value);
    partial void OnIsSystemRoleActiveChanged();
    partial void OnTranCodeChanging(string value);
    partial void OnTranCodeChanged();
    partial void OnMaxNoOfSupRequiredChanging(System.Nullable<decimal> value);
    partial void OnMaxNoOfSupRequiredChanged();
    #endregion
		
		public RefSystemRole()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._RefDivision = default(EntityRef<RefDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemRoleID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal SystemRoleID
		{
			get
			{
				return this._SystemRoleID;
			}
			set
			{
				if ((this._SystemRoleID != value))
				{
					this.OnSystemRoleIDChanging(value);
					this.SendPropertyChanging();
					this._SystemRoleID = value;
					this.SendPropertyChanged("SystemRoleID");
					this.OnSystemRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Decimal(18,0) NOT NULL")]
		public decimal DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._RefDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemRole", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string SystemRole
		{
			get
			{
				return this._SystemRole;
			}
			set
			{
				if ((this._SystemRole != value))
				{
					this.OnSystemRoleChanging(value);
					this.SendPropertyChanging();
					this._SystemRole = value;
					this.SendPropertyChanged("SystemRole");
					this.OnSystemRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemRoleActive", DbType="Bit NOT NULL")]
		public bool IsSystemRoleActive
		{
			get
			{
				return this._IsSystemRoleActive;
			}
			set
			{
				if ((this._IsSystemRoleActive != value))
				{
					this.OnIsSystemRoleActiveChanging(value);
					this.SendPropertyChanging();
					this._IsSystemRoleActive = value;
					this.SendPropertyChanged("IsSystemRoleActive");
					this.OnIsSystemRoleActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranCode", DbType="VarChar(500)")]
		public string TranCode
		{
			get
			{
				return this._TranCode;
			}
			set
			{
				if ((this._TranCode != value))
				{
					this.OnTranCodeChanging(value);
					this.SendPropertyChanging();
					this._TranCode = value;
					this.SendPropertyChanged("TranCode");
					this.OnTranCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNoOfSupRequired", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MaxNoOfSupRequired
		{
			get
			{
				return this._MaxNoOfSupRequired;
			}
			set
			{
				if ((this._MaxNoOfSupRequired != value))
				{
					this.OnMaxNoOfSupRequiredChanging(value);
					this.SendPropertyChanging();
					this._MaxNoOfSupRequired = value;
					this.SendPropertyChanged("MaxNoOfSupRequired");
					this.OnMaxNoOfSupRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefSystemRole_Application", Storage="_Applications", ThisKey="SystemRoleID", OtherKey="SystemRoleID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefDivision_RefSystemRole", Storage="_RefDivision", ThisKey="DivisionID", OtherKey="DivisionID", IsForeignKey=true)]
		public RefDivision RefDivision
		{
			get
			{
				return this._RefDivision.Entity;
			}
			set
			{
				RefDivision previousValue = this._RefDivision.Entity;
				if (((previousValue != value) 
							|| (this._RefDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefDivision.Entity = null;
						previousValue.RefSystemRoles.Remove(this);
					}
					this._RefDivision.Entity = value;
					if ((value != null))
					{
						value.RefSystemRoles.Add(this);
						this._DivisionID = value.DivisionID;
					}
					else
					{
						this._DivisionID = default(decimal);
					}
					this.SendPropertyChanged("RefDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefSystemRole = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefSystemRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefSystemRoleSupervisors")]
	public partial class RefSystemRoleSupervisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _SystemRoleID;
		
		private string _UserID;
		
		private decimal _LevelID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemRoleIDChanging(decimal value);
    partial void OnSystemRoleIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLevelIDChanging(decimal value);
    partial void OnLevelIDChanged();
    #endregion
		
		public RefSystemRoleSupervisor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemRoleID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal SystemRoleID
		{
			get
			{
				return this._SystemRoleID;
			}
			set
			{
				if ((this._SystemRoleID != value))
				{
					this.OnSystemRoleIDChanging(value);
					this.SendPropertyChanging();
					this._SystemRoleID = value;
					this.SendPropertyChanged("SystemRoleID");
					this.OnSystemRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Decimal(18,0) NOT NULL")]
		public decimal LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefUserLevel")]
	public partial class RefUserLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _LevelID;
		
		private string _LevelDesc;
		
		private System.Nullable<bool> _IsLevelIDActive;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<UserManager> _UserManagers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(decimal value);
    partial void OnLevelIDChanged();
    partial void OnLevelDescChanging(string value);
    partial void OnLevelDescChanged();
    partial void OnIsLevelIDActiveChanging(System.Nullable<bool> value);
    partial void OnIsLevelIDActiveChanged();
    #endregion
		
		public RefUserLevel()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._UserManagers = new EntitySet<UserManager>(new Action<UserManager>(this.attach_UserManagers), new Action<UserManager>(this.detach_UserManagers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDesc", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string LevelDesc
		{
			get
			{
				return this._LevelDesc;
			}
			set
			{
				if ((this._LevelDesc != value))
				{
					this.OnLevelDescChanging(value);
					this.SendPropertyChanging();
					this._LevelDesc = value;
					this.SendPropertyChanged("LevelDesc");
					this.OnLevelDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLevelIDActive", DbType="Bit")]
		public System.Nullable<bool> IsLevelIDActive
		{
			get
			{
				return this._IsLevelIDActive;
			}
			set
			{
				if ((this._IsLevelIDActive != value))
				{
					this.OnIsLevelIDActiveChanging(value);
					this.SendPropertyChanging();
					this._IsLevelIDActive = value;
					this.SendPropertyChanged("IsLevelIDActive");
					this.OnIsLevelIDActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefUserLevel_Application", Storage="_Applications", ThisKey="LevelID", OtherKey="AppLevel")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefUserLevel_UserManager", Storage="_UserManagers", ThisKey="LevelID", OtherKey="LevelID")]
		public EntitySet<UserManager> UserManagers
		{
			get
			{
				return this._UserManagers;
			}
			set
			{
				this._UserManagers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefUserLevel = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.RefUserLevel = null;
		}
		
		private void attach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.RefUserLevel = this;
		}
		
		private void detach_UserManagers(UserManager entity)
		{
			this.SendPropertyChanging();
			entity.RefUserLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefUserRequestType")]
	public partial class RefUserRequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _UserRequestTypeID;
		
		private string _UserRequestType;
		
		private System.Nullable<bool> _IsUserRequestTypeActive;
		
		private System.Nullable<bool> _IsLimitsRequired;
		
		private System.Nullable<bool> _IsUserNameRequired;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRequestTypeIDChanging(decimal value);
    partial void OnUserRequestTypeIDChanged();
    partial void OnUserRequestTypeChanging(string value);
    partial void OnUserRequestTypeChanged();
    partial void OnIsUserRequestTypeActiveChanging(System.Nullable<bool> value);
    partial void OnIsUserRequestTypeActiveChanged();
    partial void OnIsLimitsRequiredChanging(System.Nullable<bool> value);
    partial void OnIsLimitsRequiredChanged();
    partial void OnIsUserNameRequiredChanging(System.Nullable<bool> value);
    partial void OnIsUserNameRequiredChanged();
    #endregion
		
		public RefUserRequestType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRequestTypeID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal UserRequestTypeID
		{
			get
			{
				return this._UserRequestTypeID;
			}
			set
			{
				if ((this._UserRequestTypeID != value))
				{
					this.OnUserRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserRequestTypeID = value;
					this.SendPropertyChanged("UserRequestTypeID");
					this.OnUserRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRequestType", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserRequestType
		{
			get
			{
				return this._UserRequestType;
			}
			set
			{
				if ((this._UserRequestType != value))
				{
					this.OnUserRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._UserRequestType = value;
					this.SendPropertyChanged("UserRequestType");
					this.OnUserRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserRequestTypeActive", DbType="Bit")]
		public System.Nullable<bool> IsUserRequestTypeActive
		{
			get
			{
				return this._IsUserRequestTypeActive;
			}
			set
			{
				if ((this._IsUserRequestTypeActive != value))
				{
					this.OnIsUserRequestTypeActiveChanging(value);
					this.SendPropertyChanging();
					this._IsUserRequestTypeActive = value;
					this.SendPropertyChanged("IsUserRequestTypeActive");
					this.OnIsUserRequestTypeActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLimitsRequired", DbType="Bit")]
		public System.Nullable<bool> IsLimitsRequired
		{
			get
			{
				return this._IsLimitsRequired;
			}
			set
			{
				if ((this._IsLimitsRequired != value))
				{
					this.OnIsLimitsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsLimitsRequired = value;
					this.SendPropertyChanged("IsLimitsRequired");
					this.OnIsLimitsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserNameRequired", DbType="Bit")]
		public System.Nullable<bool> IsUserNameRequired
		{
			get
			{
				return this._IsUserNameRequired;
			}
			set
			{
				if ((this._IsUserNameRequired != value))
				{
					this.OnIsUserNameRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsUserNameRequired = value;
					this.SendPropertyChanged("IsUserNameRequired");
					this.OnIsUserNameRequiredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reported_channel")]
	public partial class Reported_channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Reported_channel_ID;
		
		private string _Report_description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReported_channel_IDChanging(decimal value);
    partial void OnReported_channel_IDChanged();
    partial void OnReport_descriptionChanging(string value);
    partial void OnReport_descriptionChanged();
    #endregion
		
		public Reported_channel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported_channel_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Reported_channel_ID
		{
			get
			{
				return this._Reported_channel_ID;
			}
			set
			{
				if ((this._Reported_channel_ID != value))
				{
					this.OnReported_channel_IDChanging(value);
					this.SendPropertyChanging();
					this._Reported_channel_ID = value;
					this.SendPropertyChanged("Reported_channel_ID");
					this.OnReported_channel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Report_description", DbType="VarChar(100)")]
		public string Report_description
		{
			get
			{
				return this._Report_description;
			}
			set
			{
				if ((this._Report_description != value))
				{
					this.OnReport_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Report_description = value;
					this.SendPropertyChanged("Report_description");
					this.OnReport_descriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestDetail")]
	public partial class RequestDetail
	{
		
		private System.Guid _RowID;
		
		private decimal _RequestID;
		
		private string _ProjectID;
		
		private int _ActivityID;
		
		private string _TaskActivityDesc;
		
		private System.DateTime _ActivityDate;
		
		private decimal _ActivityRowCount;
		
		private string _ReportedTo;
		
		private string _ReportedBy;
		
		private string _RecordedBy;
		
		private string _ReportedMedia;
		
		private string _ContactTo;
		
		private string _StatusUpdatedBy;
		
		public RequestDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this._RowID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Decimal(18,0) NOT NULL")]
		public decimal RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskActivityDesc", DbType="VarChar(201)")]
		public string TaskActivityDesc
		{
			get
			{
				return this._TaskActivityDesc;
			}
			set
			{
				if ((this._TaskActivityDesc != value))
				{
					this._TaskActivityDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this._ActivityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityRowCount", DbType="Decimal(18,0) NOT NULL")]
		public decimal ActivityRowCount
		{
			get
			{
				return this._ActivityRowCount;
			}
			set
			{
				if ((this._ActivityRowCount != value))
				{
					this._ActivityRowCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedTo", DbType="VarChar(50)")]
		public string ReportedTo
		{
			get
			{
				return this._ReportedTo;
			}
			set
			{
				if ((this._ReportedTo != value))
				{
					this._ReportedTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy", DbType="VarChar(50)")]
		public string ReportedBy
		{
			get
			{
				return this._ReportedBy;
			}
			set
			{
				if ((this._ReportedBy != value))
				{
					this._ReportedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RecordedBy
		{
			get
			{
				return this._RecordedBy;
			}
			set
			{
				if ((this._RecordedBy != value))
				{
					this._RecordedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedMedia", DbType="VarChar(50)")]
		public string ReportedMedia
		{
			get
			{
				return this._ReportedMedia;
			}
			set
			{
				if ((this._ReportedMedia != value))
				{
					this._ReportedMedia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTo", DbType="VarChar(50)")]
		public string ContactTo
		{
			get
			{
				return this._ContactTo;
			}
			set
			{
				if ((this._ContactTo != value))
				{
					this._ContactTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusUpdatedBy", DbType="VarChar(50)")]
		public string StatusUpdatedBy
		{
			get
			{
				return this._StatusUpdatedBy;
			}
			set
			{
				if ((this._StatusUpdatedBy != value))
				{
					this._StatusUpdatedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requests")]
	public partial class Request
	{
		
		private string _ProjectID;
		
		private decimal _RequestID;
		
		private string _RequestDes;
		
		private System.DateTime _RequestDate;
		
		private string _Critical;
		
		private string _DocAttached;
		
		private int _LocationID;
		
		private string _Solution;
		
		private int _ActivityID;
		
		private string _AssignedTo;
		
		private string _AssignedBy;
		
		public Request()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Decimal(18,0) NOT NULL")]
		public decimal RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDes", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string RequestDes
		{
			get
			{
				return this._RequestDes;
			}
			set
			{
				if ((this._RequestDes != value))
				{
					this._RequestDes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Critical", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Critical
		{
			get
			{
				return this._Critical;
			}
			set
			{
				if ((this._Critical != value))
				{
					this._Critical = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocAttached", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DocAttached
		{
			get
			{
				return this._DocAttached;
			}
			set
			{
				if ((this._DocAttached != value))
				{
					this._DocAttached = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solution", DbType="VarChar(2000)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this._Solution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTo", DbType="NVarChar(50)")]
		public string AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this._AssignedTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedBy", DbType="VarChar(200)")]
		public string AssignedBy
		{
			get
			{
				return this._AssignedBy;
			}
			set
			{
				if ((this._AssignedBy != value))
				{
					this._AssignedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sirGroup")]
	public partial class sirGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private decimal _ProjectCatID;
		
		private EntityRef<RefProjectCateg> _RefProjectCateg;
		
		private EntityRef<UserManager> _UserManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnProjectCatIDChanging(decimal value);
    partial void OnProjectCatIDChanged();
    #endregion
		
		public sirGroup()
		{
			this._RefProjectCateg = default(EntityRef<RefProjectCateg>);
			this._UserManager = default(EntityRef<UserManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCatID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ProjectCatID
		{
			get
			{
				return this._ProjectCatID;
			}
			set
			{
				if ((this._ProjectCatID != value))
				{
					if (this._RefProjectCateg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectCatIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectCatID = value;
					this.SendPropertyChanged("ProjectCatID");
					this.OnProjectCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefProjectCateg_sirGroup", Storage="_RefProjectCateg", ThisKey="ProjectCatID", OtherKey="ProjectCatID", IsForeignKey=true)]
		public RefProjectCateg RefProjectCateg
		{
			get
			{
				return this._RefProjectCateg.Entity;
			}
			set
			{
				RefProjectCateg previousValue = this._RefProjectCateg.Entity;
				if (((previousValue != value) 
							|| (this._RefProjectCateg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefProjectCateg.Entity = null;
						previousValue.sirGroups.Remove(this);
					}
					this._RefProjectCateg.Entity = value;
					if ((value != null))
					{
						value.sirGroups.Add(this);
						this._ProjectCatID = value.ProjectCatID;
					}
					else
					{
						this._ProjectCatID = default(decimal);
					}
					this.SendPropertyChanged("RefProjectCateg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_sirGroup", Storage="_UserManager", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserManager UserManager
		{
			get
			{
				return this._UserManager.Entity;
			}
			set
			{
				UserManager previousValue = this._UserManager.Entity;
				if (((previousValue != value) 
							|| (this._UserManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManager.Entity = null;
						previousValue.sirGroups.Remove(this);
					}
					this._UserManager.Entity = value;
					if ((value != null))
					{
						value.sirGroups.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCategory")]
	public partial class UserCategory
	{
		
		private decimal _UserCategoryCode;
		
		private string _UserCategory1;
		
		private System.Nullable<bool> _Active;
		
		public UserCategory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal UserCategoryCode
		{
			get
			{
				return this._UserCategoryCode;
			}
			set
			{
				if ((this._UserCategoryCode != value))
				{
					this._UserCategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserCategory", Storage="_UserCategory1", DbType="VarChar(255)")]
		public string UserCategory1
		{
			get
			{
				return this._UserCategory1;
			}
			set
			{
				if ((this._UserCategory1 != value))
				{
					this._UserCategory1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManager")]
	public partial class UserManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _OrgID;
		
		private string _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Description;
		
		private System.Nullable<bool> _Admin;
		
		private string _Employee_id;
		
		private System.Nullable<decimal> _RoleId;
		
		private System.Nullable<bool> _RoleOveride;
		
		private System.Nullable<System.DateTime> _PasswordExpireDate;
		
		private System.Nullable<bool> _PasswordExpire;
		
		private System.Nullable<System.DateTime> _LoginTimeFrom;
		
		private System.Nullable<System.DateTime> _LoginTimeTo;
		
		private System.Nullable<bool> _AccountDisabled;
		
		private System.Nullable<bool> _LeaveSpecialApproval;
		
		private System.Nullable<bool> _IdentiyHRAndMIS;
		
		private System.Nullable<bool> _UserBlocked;
		
		private System.Nullable<int> _OfficeID;
		
		private System.Nullable<int> _LocationID;
		
		private string _OrgEmail;
		
		private string _OtherEmialAddress;
		
		private string _MgrEmailaddress;
		
		private System.Nullable<bool> _SendEmail;
		
		private string _CCEmail;
		
		private System.Nullable<bool> _UserOfActionRegister;
		
		private string _PhoneNo;
		
		private string _Title;
		
		private System.Nullable<decimal> _LevelID;
		
		private System.Nullable<decimal> _DivisionID;
		
		private System.Nullable<decimal> _UserGroupID;
		
		private System.Nullable<bool> _IsGroupUser;
		
		private EntitySet<RefComplaint> _RefComplaints;
		
		private EntitySet<RefComplaint> _RefComplaints1;
		
		private EntitySet<sirGroup> _sirGroups;
		
		private EntityRef<CompanySetting> _CompanySetting;
		
		private EntityRef<RefLocation> _RefLocation;
		
		private EntityRef<RefUserLevel> _RefUserLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(System.Nullable<decimal> value);
    partial void OnOrgIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    partial void OnEmployee_idChanging(string value);
    partial void OnEmployee_idChanged();
    partial void OnRoleIdChanging(System.Nullable<decimal> value);
    partial void OnRoleIdChanged();
    partial void OnRoleOverideChanging(System.Nullable<bool> value);
    partial void OnRoleOverideChanged();
    partial void OnPasswordExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordExpireDateChanged();
    partial void OnPasswordExpireChanging(System.Nullable<bool> value);
    partial void OnPasswordExpireChanged();
    partial void OnLoginTimeFromChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginTimeFromChanged();
    partial void OnLoginTimeToChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginTimeToChanged();
    partial void OnAccountDisabledChanging(System.Nullable<bool> value);
    partial void OnAccountDisabledChanged();
    partial void OnLeaveSpecialApprovalChanging(System.Nullable<bool> value);
    partial void OnLeaveSpecialApprovalChanged();
    partial void OnIdentiyHRAndMISChanging(System.Nullable<bool> value);
    partial void OnIdentiyHRAndMISChanged();
    partial void OnUserBlockedChanging(System.Nullable<bool> value);
    partial void OnUserBlockedChanged();
    partial void OnOfficeIDChanging(System.Nullable<int> value);
    partial void OnOfficeIDChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnOrgEmailChanging(string value);
    partial void OnOrgEmailChanged();
    partial void OnOtherEmialAddressChanging(string value);
    partial void OnOtherEmialAddressChanged();
    partial void OnMgrEmailaddressChanging(string value);
    partial void OnMgrEmailaddressChanged();
    partial void OnSendEmailChanging(System.Nullable<bool> value);
    partial void OnSendEmailChanged();
    partial void OnCCEmailChanging(string value);
    partial void OnCCEmailChanged();
    partial void OnUserOfActionRegisterChanging(System.Nullable<bool> value);
    partial void OnUserOfActionRegisterChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLevelIDChanging(System.Nullable<decimal> value);
    partial void OnLevelIDChanged();
    partial void OnDivisionIDChanging(System.Nullable<decimal> value);
    partial void OnDivisionIDChanged();
    partial void OnUserGroupIDChanging(System.Nullable<decimal> value);
    partial void OnUserGroupIDChanged();
    partial void OnIsGroupUserChanging(System.Nullable<bool> value);
    partial void OnIsGroupUserChanged();
    #endregion
		
		public UserManager()
		{
			this._RefComplaints = new EntitySet<RefComplaint>(new Action<RefComplaint>(this.attach_RefComplaints), new Action<RefComplaint>(this.detach_RefComplaints));
			this._RefComplaints1 = new EntitySet<RefComplaint>(new Action<RefComplaint>(this.attach_RefComplaints1), new Action<RefComplaint>(this.detach_RefComplaints1));
			this._sirGroups = new EntitySet<sirGroup>(new Action<sirGroup>(this.attach_sirGroups), new Action<sirGroup>(this.detach_sirGroups));
			this._CompanySetting = default(EntityRef<CompanySetting>);
			this._RefLocation = default(EntityRef<RefLocation>);
			this._RefUserLevel = default(EntityRef<RefUserLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._CompanySetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="NVarChar(10)")]
		public string Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleOveride", DbType="Bit")]
		public System.Nullable<bool> RoleOveride
		{
			get
			{
				return this._RoleOveride;
			}
			set
			{
				if ((this._RoleOveride != value))
				{
					this.OnRoleOverideChanging(value);
					this.SendPropertyChanging();
					this._RoleOveride = value;
					this.SendPropertyChanged("RoleOveride");
					this.OnRoleOverideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordExpireDate
		{
			get
			{
				return this._PasswordExpireDate;
			}
			set
			{
				if ((this._PasswordExpireDate != value))
				{
					this.OnPasswordExpireDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordExpireDate = value;
					this.SendPropertyChanged("PasswordExpireDate");
					this.OnPasswordExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordExpire", DbType="Bit")]
		public System.Nullable<bool> PasswordExpire
		{
			get
			{
				return this._PasswordExpire;
			}
			set
			{
				if ((this._PasswordExpire != value))
				{
					this.OnPasswordExpireChanging(value);
					this.SendPropertyChanging();
					this._PasswordExpire = value;
					this.SendPropertyChanged("PasswordExpire");
					this.OnPasswordExpireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTimeFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginTimeFrom
		{
			get
			{
				return this._LoginTimeFrom;
			}
			set
			{
				if ((this._LoginTimeFrom != value))
				{
					this.OnLoginTimeFromChanging(value);
					this.SendPropertyChanging();
					this._LoginTimeFrom = value;
					this.SendPropertyChanged("LoginTimeFrom");
					this.OnLoginTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTimeTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginTimeTo
		{
			get
			{
				return this._LoginTimeTo;
			}
			set
			{
				if ((this._LoginTimeTo != value))
				{
					this.OnLoginTimeToChanging(value);
					this.SendPropertyChanging();
					this._LoginTimeTo = value;
					this.SendPropertyChanged("LoginTimeTo");
					this.OnLoginTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDisabled", DbType="Bit")]
		public System.Nullable<bool> AccountDisabled
		{
			get
			{
				return this._AccountDisabled;
			}
			set
			{
				if ((this._AccountDisabled != value))
				{
					this.OnAccountDisabledChanging(value);
					this.SendPropertyChanging();
					this._AccountDisabled = value;
					this.SendPropertyChanged("AccountDisabled");
					this.OnAccountDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveSpecialApproval", DbType="Bit")]
		public System.Nullable<bool> LeaveSpecialApproval
		{
			get
			{
				return this._LeaveSpecialApproval;
			}
			set
			{
				if ((this._LeaveSpecialApproval != value))
				{
					this.OnLeaveSpecialApprovalChanging(value);
					this.SendPropertyChanging();
					this._LeaveSpecialApproval = value;
					this.SendPropertyChanged("LeaveSpecialApproval");
					this.OnLeaveSpecialApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentiyHRAndMIS", DbType="Bit")]
		public System.Nullable<bool> IdentiyHRAndMIS
		{
			get
			{
				return this._IdentiyHRAndMIS;
			}
			set
			{
				if ((this._IdentiyHRAndMIS != value))
				{
					this.OnIdentiyHRAndMISChanging(value);
					this.SendPropertyChanging();
					this._IdentiyHRAndMIS = value;
					this.SendPropertyChanged("IdentiyHRAndMIS");
					this.OnIdentiyHRAndMISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBlocked", DbType="Bit")]
		public System.Nullable<bool> UserBlocked
		{
			get
			{
				return this._UserBlocked;
			}
			set
			{
				if ((this._UserBlocked != value))
				{
					this.OnUserBlockedChanging(value);
					this.SendPropertyChanging();
					this._UserBlocked = value;
					this.SendPropertyChanged("UserBlocked");
					this.OnUserBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int")]
		public System.Nullable<int> OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._RefLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgEmail", DbType="VarChar(50)")]
		public string OrgEmail
		{
			get
			{
				return this._OrgEmail;
			}
			set
			{
				if ((this._OrgEmail != value))
				{
					this.OnOrgEmailChanging(value);
					this.SendPropertyChanging();
					this._OrgEmail = value;
					this.SendPropertyChanged("OrgEmail");
					this.OnOrgEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherEmialAddress", DbType="VarChar(260)")]
		public string OtherEmialAddress
		{
			get
			{
				return this._OtherEmialAddress;
			}
			set
			{
				if ((this._OtherEmialAddress != value))
				{
					this.OnOtherEmialAddressChanging(value);
					this.SendPropertyChanging();
					this._OtherEmialAddress = value;
					this.SendPropertyChanged("OtherEmialAddress");
					this.OnOtherEmialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MgrEmailaddress", DbType="VarChar(260)")]
		public string MgrEmailaddress
		{
			get
			{
				return this._MgrEmailaddress;
			}
			set
			{
				if ((this._MgrEmailaddress != value))
				{
					this.OnMgrEmailaddressChanging(value);
					this.SendPropertyChanging();
					this._MgrEmailaddress = value;
					this.SendPropertyChanged("MgrEmailaddress");
					this.OnMgrEmailaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendEmail", DbType="Bit")]
		public System.Nullable<bool> SendEmail
		{
			get
			{
				return this._SendEmail;
			}
			set
			{
				if ((this._SendEmail != value))
				{
					this.OnSendEmailChanging(value);
					this.SendPropertyChanging();
					this._SendEmail = value;
					this.SendPropertyChanged("SendEmail");
					this.OnSendEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCEmail", DbType="VarChar(260)")]
		public string CCEmail
		{
			get
			{
				return this._CCEmail;
			}
			set
			{
				if ((this._CCEmail != value))
				{
					this.OnCCEmailChanging(value);
					this.SendPropertyChanging();
					this._CCEmail = value;
					this.SendPropertyChanged("CCEmail");
					this.OnCCEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserOfActionRegister", DbType="Bit")]
		public System.Nullable<bool> UserOfActionRegister
		{
			get
			{
				return this._UserOfActionRegister;
			}
			set
			{
				if ((this._UserOfActionRegister != value))
				{
					this.OnUserOfActionRegisterChanging(value);
					this.SendPropertyChanging();
					this._UserOfActionRegister = value;
					this.SendPropertyChanged("UserOfActionRegister");
					this.OnUserOfActionRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="Char(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._RefUserLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroupUser", DbType="Bit")]
		public System.Nullable<bool> IsGroupUser
		{
			get
			{
				return this._IsGroupUser;
			}
			set
			{
				if ((this._IsGroupUser != value))
				{
					this.OnIsGroupUserChanging(value);
					this.SendPropertyChanging();
					this._IsGroupUser = value;
					this.SendPropertyChanged("IsGroupUser");
					this.OnIsGroupUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_RefComplaint", Storage="_RefComplaints", ThisKey="UserID", OtherKey="Assigne_to")]
		public EntitySet<RefComplaint> RefComplaints
		{
			get
			{
				return this._RefComplaints;
			}
			set
			{
				this._RefComplaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_RefComplaint1", Storage="_RefComplaints1", ThisKey="UserID", OtherKey="Assign_By")]
		public EntitySet<RefComplaint> RefComplaints1
		{
			get
			{
				return this._RefComplaints1;
			}
			set
			{
				this._RefComplaints1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManager_sirGroup", Storage="_sirGroups", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<sirGroup> sirGroups
		{
			get
			{
				return this._sirGroups;
			}
			set
			{
				this._sirGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanySetting_UserManager", Storage="_CompanySetting", ThisKey="OrgID", OtherKey="OrgID", IsForeignKey=true)]
		public CompanySetting CompanySetting
		{
			get
			{
				return this._CompanySetting.Entity;
			}
			set
			{
				CompanySetting previousValue = this._CompanySetting.Entity;
				if (((previousValue != value) 
							|| (this._CompanySetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanySetting.Entity = null;
						previousValue.UserManagers.Remove(this);
					}
					this._CompanySetting.Entity = value;
					if ((value != null))
					{
						value.UserManagers.Add(this);
						this._OrgID = value.OrgID;
					}
					else
					{
						this._OrgID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("CompanySetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefLocation_UserManager", Storage="_RefLocation", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public RefLocation RefLocation
		{
			get
			{
				return this._RefLocation.Entity;
			}
			set
			{
				RefLocation previousValue = this._RefLocation.Entity;
				if (((previousValue != value) 
							|| (this._RefLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefLocation.Entity = null;
						previousValue.UserManagers.Remove(this);
					}
					this._RefLocation.Entity = value;
					if ((value != null))
					{
						value.UserManagers.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RefLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RefUserLevel_UserManager", Storage="_RefUserLevel", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public RefUserLevel RefUserLevel
		{
			get
			{
				return this._RefUserLevel.Entity;
			}
			set
			{
				RefUserLevel previousValue = this._RefUserLevel.Entity;
				if (((previousValue != value) 
							|| (this._RefUserLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefUserLevel.Entity = null;
						previousValue.UserManagers.Remove(this);
					}
					this._RefUserLevel.Entity = value;
					if ((value != null))
					{
						value.UserManagers.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("RefUserLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.UserManager = this;
		}
		
		private void detach_RefComplaints(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.UserManager = null;
		}
		
		private void attach_RefComplaints1(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.UserManager1 = this;
		}
		
		private void detach_RefComplaints1(RefComplaint entity)
		{
			this.SendPropertyChanging();
			entity.UserManager1 = null;
		}
		
		private void attach_sirGroups(sirGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserManager = this;
		}
		
		private void detach_sirGroups(sirGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserManager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagerGroup")]
	public partial class UserManagerGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _UserGroupID;
		
		private string _UserGroupDesc;
		
		private string _GroupEmailID;
		
		private string _GroupEmailCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserGroupIDChanging(decimal value);
    partial void OnUserGroupIDChanged();
    partial void OnUserGroupDescChanging(string value);
    partial void OnUserGroupDescChanged();
    partial void OnGroupEmailIDChanging(string value);
    partial void OnGroupEmailIDChanged();
    partial void OnGroupEmailCCChanging(string value);
    partial void OnGroupEmailCCChanged();
    #endregion
		
		public UserManagerGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupDesc", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserGroupDesc
		{
			get
			{
				return this._UserGroupDesc;
			}
			set
			{
				if ((this._UserGroupDesc != value))
				{
					this.OnUserGroupDescChanging(value);
					this.SendPropertyChanging();
					this._UserGroupDesc = value;
					this.SendPropertyChanged("UserGroupDesc");
					this.OnUserGroupDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupEmailID", DbType="VarChar(250)")]
		public string GroupEmailID
		{
			get
			{
				return this._GroupEmailID;
			}
			set
			{
				if ((this._GroupEmailID != value))
				{
					this.OnGroupEmailIDChanging(value);
					this.SendPropertyChanging();
					this._GroupEmailID = value;
					this.SendPropertyChanged("GroupEmailID");
					this.OnGroupEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupEmailCC", DbType="VarChar(250)")]
		public string GroupEmailCC
		{
			get
			{
				return this._GroupEmailCC;
			}
			set
			{
				if ((this._GroupEmailCC != value))
				{
					this.OnGroupEmailCCChanging(value);
					this.SendPropertyChanging();
					this._GroupEmailCC = value;
					this.SendPropertyChanged("GroupEmailCC");
					this.OnGroupEmailCCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRightsAtFormDelete")]
	public partial class UserRightsAtFormDelete
	{
		
		private System.Nullable<System.Guid> _SrNo;
		
		private string _FormName;
		
		private string _FormDesc;
		
		private string _RightDes;
		
		private bool _Granted;
		
		private string _UserID;
		
		public UserRightsAtFormDelete()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrNo", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SrNo
		{
			get
			{
				return this._SrNo;
			}
			set
			{
				if ((this._SrNo != value))
				{
					this._SrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this._FormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDesc", DbType="VarChar(50)")]
		public string FormDesc
		{
			get
			{
				return this._FormDesc;
			}
			set
			{
				if ((this._FormDesc != value))
				{
					this._FormDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RightDes
		{
			get
			{
				return this._RightDes;
			}
			set
			{
				if ((this._RightDes != value))
				{
					this._RightDes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Granted", DbType="Bit NOT NULL")]
		public bool Granted
		{
			get
			{
				return this._Granted;
			}
			set
			{
				if ((this._Granted != value))
				{
					this._Granted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Users")]
	public partial class vw_aspnet_User
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public vw_aspnet_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this._LoweredUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this._MobileAlias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this._IsAnonymous = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_UsersInRoles")]
	public partial class vw_aspnet_UsersInRole
	{
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		public vw_aspnet_UsersInRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebAccessStatus")]
	public partial class WebAccessStatus
	{
		
		private string _LoginAtWeb;
		
		private string _WorkstationName;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _WebAccessDate;
		
		private string _ComputerID;
		
		private string _SystemLoginID;
		
		private System.Nullable<System.DateTime> _ChangeDateTime;
		
		private string _ClientBrowser;
		
		private string _WindowsLogin;
		
		private string _OSNameAndVer;
		
		public WebAccessStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginAtWeb", DbType="VarChar(200)")]
		public string LoginAtWeb
		{
			get
			{
				return this._LoginAtWeb;
			}
			set
			{
				if ((this._LoginAtWeb != value))
				{
					this._LoginAtWeb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkstationName", DbType="VarChar(200)")]
		public string WorkstationName
		{
			get
			{
				return this._WorkstationName;
			}
			set
			{
				if ((this._WorkstationName != value))
				{
					this._WorkstationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(200)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAccessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WebAccessDate
		{
			get
			{
				return this._WebAccessDate;
			}
			set
			{
				if ((this._WebAccessDate != value))
				{
					this._WebAccessDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerID", DbType="VarChar(200)")]
		public string ComputerID
		{
			get
			{
				return this._ComputerID;
			}
			set
			{
				if ((this._ComputerID != value))
				{
					this._ComputerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemLoginID", DbType="VarChar(200)")]
		public string SystemLoginID
		{
			get
			{
				return this._SystemLoginID;
			}
			set
			{
				if ((this._SystemLoginID != value))
				{
					this._SystemLoginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDateTime
		{
			get
			{
				return this._ChangeDateTime;
			}
			set
			{
				if ((this._ChangeDateTime != value))
				{
					this._ChangeDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientBrowser", DbType="VarChar(200)")]
		public string ClientBrowser
		{
			get
			{
				return this._ClientBrowser;
			}
			set
			{
				if ((this._ClientBrowser != value))
				{
					this._ClientBrowser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsLogin", DbType="VarChar(200)")]
		public string WindowsLogin
		{
			get
			{
				return this._WindowsLogin;
			}
			set
			{
				if ((this._WindowsLogin != value))
				{
					this._WindowsLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSNameAndVer", DbType="VarChar(400)")]
		public string OSNameAndVer
		{
			get
			{
				return this._OSNameAndVer;
			}
			set
			{
				if ((this._OSNameAndVer != value))
				{
					this._OSNameAndVer = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
